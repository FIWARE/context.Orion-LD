# Copyright 2024 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Two DDS test clients, one publishes, the other receives notifications

--SHELL-INIT--
dbInit CB
ftClientStart -v -t 0-5000
ftClientStart -v -t 0-5000 --port $FT2_PORT --logDir $FT2_LOG_DIR

--SHELL--

#
# 01. Ask FT1 to create a DDS subscription on topic 'p1'
# 02. Ask FT2 to publish an entity on topic 'p1'
# 03. Ask FT2 to publish one more entity on topic 'p1'
# 04. Ask FT1 what it has received
# 05. Reset the DDS notification accumulation
#

echo "01. Ask FT1 to create a DDS subscription on topic 'p1'"
echo "======================================================"
payload='{
  "id": "urn:s1",
  "type": "Subscription"
}'
orionCurl --url '/dds/sub?ddsTopicType=someTopic&ddsTopicName=https://uri.etsi.org/ngsi-ld/default-context/p1' --port $FT_PORT --payload "$payload"
echo
echo


echo "02. Ask FT2 to publish an entity on topic 'p1'"
echo "=============================================="
payload='{
  "https://uri.etsi.org/ngsi-ld/default-context/p1": 10
}'
orionCurl --url '/dds/pub?ddsTopicType=someTopic&ddsTopicName=https://uri.etsi.org/ngsi-ld/default-context/p1&entityId=urn:e1&entityType=x' --port $FT2_PORT --payload "$payload"
echo
echo


echo "03. Ask FT2 to publish one more entity on topic 'p1'"
echo "===================================================="
payload='{
  "https://uri.etsi.org/ngsi-ld/default-context/p1": 12
}'
orionCurl --url '/dds/pub?ddsTopicType=someTopic&ddsTopicName=https://uri.etsi.org/ngsi-ld/default-context/p1&entityId=urn:e2&entityType=x' --port $FT2_PORT --payload "$payload"
echo
echo


echo "04. Ask FT1 what it has received"
echo "================================"
orionCurl --url /dds/dump --port $FT_PORT --noPayloadCheck
echo
echo


echo "05. Reset the DDS notification accumulation"
echo "==========================================="
orionCurl --url /dds/dump --port $FT_PORT -X DELETE
echo
echo


--REGEXPECT--
01. Ask FT1 to create a DDS subscription on topic 'p1'
======================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)



02. Ask FT2 to publish an entity on topic 'p1'
==============================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



03. Ask FT2 to publish one more entity on topic 'p1'
====================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



04. Ask FT1 what it has received
================================
HTTP/1.1 200 OK
Content-Length: 235
Date: REGEX(.*)

[
  {
    "entityType": "x",
    "entityId": "urn:e1",
    "https://uri.etsi.org/ngsi-ld/default-context/p1": 10
  },
  {
    "entityType": "x",
    "entityId": "urn:e2",
    "https://uri.etsi.org/ngsi-ld/default-context/p1": 12
  }
]



05. Reset the DDS notification accumulation
===========================================
HTTP/1.1 200 OK
Content-Length: 0
Date: REGEX(.*)



--TEARDOWN--
ftClientStop
ftClientStop --port $FT2_PORT
