# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Geoproperty - not location

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255 --prettyPrint

--SHELL--

#
# 01. Create an entity E1 with a GeoProperty called geoLoc - a point at 10,10
# 02. See E1 in the database
# 03. GET E1
# 04. Create an entity E2 with a GeoProperty called geoLoc - a point at 20,20
# 05. Query with a point 11,11 and near=200000, with 'geoLoc' as geoproperty - see E1 only
#

echo "01. Create an entity E1 with a GeoProperty called geoLoc - a point at 10,10"
echo "==========================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "geoLoc": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 10, 10 ]
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "02. See E1 in the database"
echo "=========================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "03. GET E1"
echo "=========="
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1?prettyPrint=yes&spaces=2' --noPayloadCheck
echo
echo


echo "04. Create an entity E2 with a GeoProperty called geoLoc - a point at 20,20"
echo "==========================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E2",
  "type": "T",
  "geoLoc": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 20, 20 ]
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "05. Query with a point 11,11 and near=200000, with 'geoLoc' as geoproperty - see E1 only"
echo "========================================================================================"
orionCurl --url '/ngsi-ld/v1/entities?type=T&geometry=Point&coordinates=\[11,11\]&georel=near;maxDistance==200000&geoproperty=geoLoc&prettyPrint=yes&spaces=2' --noPayloadCheck
echo
echo


--REGEXPECT--
01. Create an entity E1 with a GeoProperty called geoLoc - a point at 10,10
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



02. See E1 in the database
==========================
MongoDB shell version REGEX(.*)
connecting to: mongodb://REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entities:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/geoLoc"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/geoLoc" : {
			"type" : "GeoProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : {
				"type" : "Point",
				"coordinates" : [
					10,
					10
				]
			},
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"location" : {
		"attrName" : "https://uri.etsi.org/ngsi-ld/default-context/geoLoc",
		"coords" : {
			"type" : "Point",
			"coordinates" : [
				10,
				10
			]
		}
	},
	"lastCorrelator" : ""
}
bye


03. GET E1
==========
HTTP/1.1 200 OK
Content-Length: 197
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "geoLoc": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [
        10,
        10
      ]
    }
  }
}



04. Create an entity E2 with a GeoProperty called geoLoc - a point at 20,20
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E2
Date: REGEX(.*)



05. Query with a point 11,11 and near=200000, with 'geoLoc' as geoproperty - see E1 only
========================================================================================
HTTP/1.1 200 OK
Content-Length: 229
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

[
  {
    "id": "urn:ngsi-ld:entities:E1",
    "type": "T",
    "geoLoc": {
      "type": "GeoProperty",
      "value": {
        "type": "Point",
        "coordinates": [
          10,
          10
        ]
      }
    }
  }
]



--TEARDOWN--
brokerStop CB
#dbDrop CB
