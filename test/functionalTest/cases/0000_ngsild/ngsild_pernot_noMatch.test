# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
periodic notifications and noMatch

--SHELL-INIT--
dbInit CB
orionldStart CB -pernot -experimental -subCacheFlushIval 1

--SHELL--
#
# This test looks at subscription::notification::noMatch
#
# The broker is started without subCacheIval (no cache refresh) and a -subCacheFlushIval of 1 second

# 01. Create a pernot subscription urn:S1 with a timeInterval of 1.40 seconds
# 02. Sleep 0.1 seconds to give the broker a chance for the initial notification attempt (it's a no-match as no entities match)
# 03. GET urnS1 from cache - see noMatch=1, and no other counters/timestamps
# 04. GET urnS1 from database - see noMatch=1, and no other counters/timestamps
# 05. See urn:S1 in mongo - see noMatch=0, and no other counters/timestamps (as no flush to DB has been done)
#
# 06. Sleep 1.0 seconds (time enough for urn:S1 to be flushed to DB, but not for a new notification attempt)
# 07. See urn:S1 in mongo - see noMatch=1, and no other counters/timestamps (no flush to DB has been done

# 08. Sleep 2.0 more seconds (time enough for two more attempts)
# 09. GET urnS1 from cache - see noMatch=3, and no other counters/timestamps
# 10. GET urnS1 from database - see noMatch=3, and no other counters/timestamps
# 11. See urn:S1 in mongo - see noMatch=3, and no other counters/timestamps


echo "01. Create a pernot subscription urn:S1 with a timeInterval of 1.40 seconds"
echo "==========================================================================="
payload='{
  "id": "urn:S1",
  "type": "Subscription",
  "description": "Test Subscription No 1",
  "subscriptionName": "S1",
  "entities": [
    {
      "id": "urn:E1",
      "type": "T"
    }
  ],
  "timeInterval": 1.4,
  "notification": {
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Sleep 0.1 seconds to give the broker a chance for the initial notification attempt (it's a no-match as no entities match)"
echo "============================================================================================================================="
sleep .1
echo Slept 0.1 seconds
echo
echo


echo "03. GET urnS1 from cache - see noMatch=1, and no other counters/timestamps"
echo "=========================================================================="
orionCurl --url /ngsi-ld/v1/subscriptions/urn:S1
echo
echo


--REGEXPECT--
01. Create a pernot subscription urn:S1 with a timeInterval of 1.40 seconds
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:S1



02. Sleep 0.1 seconds to give the broker a chance for the initial notification attempt (it's a no-match as no entities match)
=============================================================================================================================
Slept 0.1 seconds


03. GET urnS1 from cache - see noMatch=1, and no other counters/timestamps
==========================================================================
HTTP/1.1 200 OK
Content-Length: 491
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "description": "Test Subscription No 1",
    "entities": [
        {
            "id": "urn:E1",
            "type": "T"
        }
    ],
    "id": "urn:S1",
    "isActive": true,
    "jsonldContext": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld",
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://127.0.0.1:9997/notify"
        },
        "format": "normalized",
        "lastNotification": "202REGEX(.*)Z",
        "noMatch": 1,
        "status": "ok",
        "timesSent": 1
    },
    "origin": "cache",
    "status": "active",
    "subscriptionName": "S1",
    "timeInterval": 1.4,
    "type": "Subscription"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
