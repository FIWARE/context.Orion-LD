# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Creation and Retrieval

--SHELL-INIT--
# Copied from ngsild_entity_post_operations_upsert.test
export BROKER=orionld
dbInit CB
brokerStart CB 0 IPv4 -experimental

--SHELL--

#
# 01. POST /ngsi-ld/v1/entityOperations/upsert?options=update - 4 Entities
# 02. See the entity urn:ngsi-ld:Vehicle:00001 in mongo
# 03. GET  /ngsi-ld/v1/entities?type=Vehicle   - See 4 Entities
# 04. POST /ngsi-ld/v1/entityOperations/upsert?options=update - Change 2 Entities
# 05. GET  /ngsi-ld/v1/entities?type=Vehicle   - See changes of 2 Entities
#


echo "01. POST /ngsi-ld/v1/entityOperations/upsert?options=update - 4 Entities"
echo "========================================================================"
payload='[
    {
        "id": "urn:ngsi-ld:Vehicle:00001",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00002",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00003",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00004",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/upsert?options=update" -X POST --payload "$payload"
echo
echo


echo "02. See the entity urn:ngsi-ld:Vehicle:00001 in mongo"
echo "====================================================="
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:Vehicle:00001"})'
echo
echo


echo "03. GET /ngsi-ld/v1/entities?type=Vehicle - See 4 Entities"
echo "=========================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Vehicle&prettyPrint=yes&spaces=2' --noPayloadCheck
echo
echo


echo "04. POST /ngsi-ld/v1/entityOperations/upsert?options=update - Change 2 Entities"
echo "==============================================================================="
payload='[
    {
        "id": "urn:ngsi-ld:Vehicle:00001",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00002",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "engine": {
            "type": "Property",
            "value": "V8"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00003",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        },
        "isBlocked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00004",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/upsert?options=update" -X POST --payload "$payload"
echo
echo


echo "05. GET /ngsi-ld/v1/entities?type=Vehicle - See changes of 2 Entities"
echo "====================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Vehicle&prettyPrint=yes&spaces=2' --noPayloadCheck
echo
echo


--REGEXPECT--
01. POST /ngsi-ld/v1/entityOperations/upsert?options=update - 4 Entities
========================================================================
HTTP/1.1 201 Created
Content-Length: 113
Content-Type: application/json
Date: REGEX(.*)

[
    "urn:ngsi-ld:Vehicle:00001",
    "urn:ngsi-ld:Vehicle:00002",
    "urn:ngsi-ld:Vehicle:00003",
    "urn:ngsi-ld:Vehicle:00004"
]


02. See the entity urn:ngsi-ld:Vehicle:00001 in mongo
=====================================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:Vehicle:00001",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/brandName",
		"https://uri.etsi.org/ngsi-ld/default-context/isParked"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/brandName" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "Mercedes",
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/default-context/isParked" : {
			"type" : "Relationship",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "urn:ngsi-ld:OffStreetParking:Downtown1",
			"mdNames" : [
				"observedAt",
				"https://uri.etsi.org/ngsi-ld/default-context/providedBy"
			],
			"md" : {
				"observedAt" : {
					"value" : 1501329604
				},
				"https://uri=etsi=org/ngsi-ld/default-context/providedBy" : {
					"type" : "Relationship",
					"value" : "urn:ngsi-ld:Person:Bob",
					"createdAt" : REGEX(.*),
					"modifiedAt" : REGEX(.*)
				}
			}
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. GET /ngsi-ld/v1/entities?type=Vehicle - See 4 Entities
==========================================================
HTTP/1.1 200 OK
Content-Length: 1659
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[
  {
    "id": "urn:ngsi-ld:Vehicle:00001",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00002",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00003",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00004",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  }
]



04. POST /ngsi-ld/v1/entityOperations/upsert?options=update - Change 2 Entities
===============================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



05. GET /ngsi-ld/v1/entities?type=Vehicle - See changes of 2 Entities
=====================================================================
HTTP/1.1 200 OK
Content-Length: 1995
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[
  {
    "id": "urn:ngsi-ld:Vehicle:00001",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00002",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "engine": {
      "type": "Property",
      "value": "V8"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00003",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    },
    "isBlocked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:00004",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04.000Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  }
]



--TEARDOWN--
brokerStop CB
dbDrop CB
