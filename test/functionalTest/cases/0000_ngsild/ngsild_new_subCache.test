# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Repopulation of subCache after restart

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. Create a subscription S1 on type=T and with q='P1==5|P2==9'
# 02. Kill broker and restart it - to take the sub from mongo and repopulate the sub-cache
# 03. GET S1
#

echo "01. Create a subscription S1 on type=T and with q='P1==5|P2==9'"
echo "==============================================================="
payload='{
  "id": "urn:ngsi-ld:subs:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "urn:T"
    }
  ],
  "q": "P1==5|P2==9",
  "notification": {
    "format": "simplified",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Kill broker and restart it - to take the sub from mongo and repopulate the sub-cache"
echo "========================================================================================"
brokerStop CB
orionldStart CB -experimental
echo
echo


echo "03. GET S1"
echo "=========="
orionCurl --url /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1
echo
echo


--REGEXPECT--
01. Create a subscription S1 on type=T and with q='P1==5|P2==9'
===============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1



02. Kill broker and restart it - to take the sub from mongo and repopulate the sub-cache
========================================================================================


03. GET S1
==========
HTTP/1.1 200 OK
Content-Length: 279
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "entities": [
        {
            "type": "urn:T"
        }
    ],
    "id": "urn:ngsi-ld:subs:S1",
    "isActive": true,
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://127.0.0.1:9997/notify"
        },
        "format": "keyValues",
        "status": "ok"
    },
    "origin": "cache",
    "q": "P1==5|P2==9",
    "status": "active",
    "type": "Subscription"
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
