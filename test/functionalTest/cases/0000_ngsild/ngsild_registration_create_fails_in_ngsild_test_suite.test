# Copyright 2018 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSI-LD Test Suite Failure at create a registration

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create a registration exactly like the NGSI-LD Test Suite case 'should create registration from ETSI Example'
# 02. See the registration in mongo
#

echo "01. Create a registration exactly like the NGSI-LD Test Suite case 'should create registration from ETSI Example'"
echo "================================================================================================================="
payload='{
  "id": "urn:ngsi-ld:ContextSourceRegistration:csr1a3456",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:ngsi-ld:Vehicle:A456",
          "type": "Vehicle"
        }
      ],
      "properties": ["brandName", "speed"],
      "relationships": ["isParked"]
    },
    {
      "entities": [
        {
          "idPattern": ".*downtown$",
          "type": "OffStreetParking"
        },
        {
          "idPattern": ".*47$",
          "type": "OffStreetParking"
        }
      ],
      "properties": ["availableSotNumber", "totalSpotNumber"],
      "relationships": ["isNextToBuilding"]
    }
  ],
  "endpoint": "http://my.csource.org:1026",
  "location": {
    "type": "Polygon",
    "coordinates": [
      [[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]]
    ]
  }
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "02. See the registration in mongo"
echo "================================="
mongoCmd2 ftest "db.registrations.findOne()"
echo
echo


--REGEXPECT--
01. Create a registration exactly like the NGSI-LD Test Suite case 'should create registration from ETSI Example'
=================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:ContextSourceRegistration:csr1a3456
Date: REGEX(.*)



02. See the registration in mongo
=================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : "urn:ngsi-ld:ContextSourceRegistration:csr1a3456",
	"servicePath" : "/",
	"contextRegistration" : [
		{
			"entities" : [
				{
					"id" : "urn:ngsi-ld:Vehicle:A456",
					"type" : "http://example.org/ngsi-ld/default/Vehicle"
				},
				{
					"id" : ".*downtown$",
					"isPattern" : "true",
					"type" : "http://example.org/ngsi-ld/default/OffStreetParking"
				},
				{
					"id" : ".*47$",
					"isPattern" : "true",
					"type" : "http://example.org/ngsi-ld/default/OffStreetParking"
				}
			],
			"attrs" : [
				{
					"name" : "http://example.org/ngsi-ld/default/brandName",
					"type" : "Property",
					"isDomain" : "false"
				},
				{
					"name" : "http://example.org/ngsi-ld/default/speed",
					"type" : "Property",
					"isDomain" : "false"
				},
				{
					"name" : "http://example.org/ngsi-ld/default/availableSotNumber",
					"type" : "Property",
					"isDomain" : "false"
				},
				{
					"name" : "http://example.org/ngsi-ld/default/totalSpotNumber",
					"type" : "Property",
					"isDomain" : "false"
				},
				{
					"name" : "http://example.org/ngsi-ld/default/isParked",
					"type" : "Relationship",
					"isDomain" : "false"
				},
				{
					"name" : "http://example.org/ngsi-ld/default/isNextToBuilding",
					"type" : "Relationship",
					"isDomain" : "false"
				}
			],
			"providingApplication" : "http://my.csource.org:1026"
		}
	],
	"format" : "JSON",
	"createdAt" : REGEX(.*),
	"modifiedAt" : REGEX(.*),
	"location" : {
		"type" : "Polygon",
		"coordinates" : [
			[
				[
					100,
					0
				],
				[
					101,
					0
				],
				[
					101,
					1
				],
				[
					100,
					1
				],
				[
					100,
					0
				]
			]
		]
	}
}
bye


--TEARDOWN--
brokerStop CB
dbDrop CB
