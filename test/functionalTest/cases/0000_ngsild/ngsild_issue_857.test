# Copyright 2021 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notifications - relationship that is an array

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription
# 02. Create a matching Entity E1, with a Relationship R1 that is an array
# 03. Dump the accumulator to see the notification - check R1
#

echo "01. Create a subscription"
echo "========================="
payload='{
  "id": "urn:ngsi-ld:Subscription:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "T"
    }
  ],
  "notification": {
    "format": "normalized",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/notify",
      "accept": "application/json"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Create a matching Entity E1, with a Relationship R1 that is an array"
echo "========================================================================"
payload='{
  "id": "urn:ngsi-ld:Entity:E1",
  "type": "T",
  "R1": {
    "type": "Relationship",
    "object": [ "urn:ngsi-ld:Entity:E1", "urn:ngsi-ld:Entity:E2" ]
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "03. Dump the accumulator to see the notification - check R1"
echo "==========================================================="
sleep 1
accumulatorDump
echo
echo


--REGEXPECT--
01. Create a subscription
=========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:S1
Date: REGEX(.*)



02. Create a matching Entity E1, with a Relationship R1 that is an array
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Entity:E1
Date: REGEX(.*)



03. Dump the accumulator to see the notification - check R1
===========================================================
POST http://REGEX(.*)/notify
Fiware-Servicepath: /
Content-Length: 306
User-Agent: orion/REGEX(.*)
Ngsiv2-Attrsformat: normalized
Host: REGEX(.*)
Accept: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Content-Type: application/json; charset=utf-8

{
    "data": [
        {
            "R1": {
                "object": [
                    "urn:ngsi-ld:Entity:E1",
                    "urn:ngsi-ld:Entity:E2"
                ],
                "type": "Relationship"
            }, 
            "id": "urn:ngsi-ld:Entity:E1", 
            "type": "T"
        }
    ], 
    "id": "urn:ngsi-ld:Notification:REGEX(.*)", 
    "notifiedAt": "REGEX(.*)", 
    "subscriptionId": "urn:ngsi-ld:Subscription:S1", 
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
