# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update an entity using Real PATCH - add two sub-attributes to a Property with none

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0 IPv4 -experimental

--SHELL--
#
# 01. Create an entity E1 with an attribute P1 having two sub-attrs P2 and P3
# 02. See E1 in mongo
# 03. PATCH E1, deleting P1:P2, using the special JSON-LD NULL Object
# 04. See E1 in mongo - make sure P1:P2 is GONE
# 05. PATCH E1, deleting P1, using the special JSON-LD NULL Object
# 06. See E1 in mongo - make sure P1 is GONE
#

echo "01. Create an entity E1 with an attribute P1 having two sub-attrs P2 and P3"
echo "==========================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": {
    "value": 1,
    "P2": 2,
    "P3": 3
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. See E1 in mongo"
echo "==================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "03. PATCH E1, deleting P1:P2, using the special JSON-LD NULL Object"
echo "==================================================================="
payload='{
  "P1": {
    "P2": {
      "type": "@json",
      "@value": null
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 -X PATCH --payload "$payload"
echo
echo


echo "04. See E1 in mongo - make sure P1:P2 is GONE"
echo "============================================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "05. PATCH E1, deleting P1, using the special JSON-LD NULL Object"
echo "================================================================"
payload='{
  "P1": {
    "@type": "@json",
    "@value": null
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 -X PATCH --payload "$payload"
echo
echo


echo "06. See E1 in mongo - make sure P1 is GONE"
echo "=========================================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


--REGEXPECT--
01. Create an entity E1 with an attribute P1 having two sub-attrs P2 and P3
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:E1
Date: REGEX(.*)



02. See E1 in mongo
===================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 1,
			"md" : {
				"https://uri=etsi=org/ngsi-ld/default-context/P2" : {
					"createdAt" : REGEX(.*),
					"modifiedAt" : REGEX(.*),
					"type" : "Property",
					"value" : 2
				},
				"https://uri=etsi=org/ngsi-ld/default-context/P3" : {
					"createdAt" : REGEX(.*),
					"modifiedAt" : REGEX(.*),
					"type" : "Property",
					"value" : 3
				}
			},
			"mdNames" : [
				"https://uri.etsi.org/ngsi-ld/default-context/P2",
				"https://uri.etsi.org/ngsi-ld/default-context/P3"
			]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. PATCH E1, deleting P1:P2, using the special JSON-LD NULL Object
===================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



04. See E1 in mongo - make sure P1:P2 is GONE
=============================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 1,
			"md" : {
				"https://uri=etsi=org/ngsi-ld/default-context/P3" : {
					"createdAt" : REGEX(.*),
					"modifiedAt" : REGEX(.*),
					"type" : "Property",
					"value" : 3
				}
			},
			"mdNames" : [
				"https://uri.etsi.org/ngsi-ld/default-context/P3"
			]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


05. PATCH E1, deleting P1, using the special JSON-LD NULL Object
================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



06. See E1 in mongo - make sure P1 is GONE
==========================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [ ],
	"attrs" : {
		
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


--TEARDOWN--
brokerStop CB
dbDrop CB
