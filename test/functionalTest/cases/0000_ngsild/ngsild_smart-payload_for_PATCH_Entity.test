# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Patch using Smart Input Format

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create an entity E1 with attributes P1, R1, G1
# 02. PATCH E1 using Smart Input Format
# 03. GET the entity and see the updates from step 02
# 04. PATCH E1 again, but with special attributes, such as location, observationSpace, and operationSpace
# 05. GET the entity and see the updates from step 04
#
# ERROR CHECKS
# 06. PATCH E1 using Smart Input Format, but R1 isn't a string
# 07. PATCH E1 using Smart Input Format, but G1 isn't an object
#

echo "01. Create an entity E1 with attributes P1, R1, G1"
echo "=================================================="
payload='{
  "id": "urn:ngsi-ld:entities:T:E1",
  "type": "T",
  "location":  {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 1, 1, 1 ]
    }
  },
  "observationSpace":  {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 1, 1, 1 ]
    }
  },
  "operationSpace": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 1, 1, 1 ]
    }
  },
  "P1": {
    "type": "Property",
    "value": "will be overwritten"
  },
  "P5": {
    "type": "Property",
    "value": "will not be overwritten"
  },
  "R1": {
    "type": "Relationship",
    "object": "urn:1"
  },
  "G1": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 1,2 ]
    }
  }  
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. PATCH E1 using Smart Input Format"
echo "====================================="
payload='{
  "P1": 12,
  "R1": "urn:ngsi-ld:entities:E2",
  "G1": {
    "type": "Point",
    "coordinates": [ 1, 2, 4 ]
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "03. GET the entity and see the updates from step 02"
echo "==================================================="
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1
echo
echo


echo "04. PATCH E1 again, but with special attributes, such as location, observationSpace, and operationSpace"
echo "======================================================================================================="
payload='{
  "location":  {
    "type": "Point",
    "coordinates": [ 1, 2, 4 ]
  },
  "observationSpace":  {
    "type": "Point",
    "coordinates": [ 1, 2, 4 ]
  },
  "operationSpace": {
    "type": "Point",
    "coordinates": [ 1, 2, 4 ]
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1/attrs -X PATCH --payload "$payload"
echo
echo


echo "05. GET the entity and see the updates from step 04"
echo "==================================================="
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1
echo
echo


--REGEXPECT--
01. Create an entity E1 with attributes P1, R1, G1
==================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1
Date: REGEX(.*)



02. PATCH E1 using Smart Input Format
=====================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



03. GET the entity and see the updates from step 02
===================================================
HTTP/1.1 200 OK
Content-Length: 536
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "G1": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                2,
                4
            ],
            "type": "Point"
        }
    },
    "P1": {
        "type": "Property",
        "value": 12
    },
    "P5": {
        "type": "Property",
        "value": "will not be overwritten"
    },
    "R1": {
        "object": "urn:ngsi-ld:entities:E2",
        "type": "Relationship"
    },
    "id": "urn:ngsi-ld:entities:T:E1",
    "location": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                1,
                1
            ],
            "type": "Point"
        }
    },
    "observationSpace": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                1,
                1
            ],
            "type": "Point"
        }
    },
    "operationSpace": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                1,
                1
            ],
            "type": "Point"
        }
    },
    "type": "T"
}


04. PATCH E1 again, but with special attributes, such as location, observationSpace, and operationSpace
=======================================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



05. GET the entity and see the updates from step 04
===================================================
HTTP/1.1 200 OK
Content-Length: 536
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "G1": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                2,
                4
            ],
            "type": "Point"
        }
    },
    "P1": {
        "type": "Property",
        "value": 12
    },
    "P5": {
        "type": "Property",
        "value": "will not be overwritten"
    },
    "R1": {
        "object": "urn:ngsi-ld:entities:E2",
        "type": "Relationship"
    },
    "id": "urn:ngsi-ld:entities:T:E1",
    "location": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                2,
                4
            ],
            "type": "Point"
        }
    },
    "observationSpace": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                2,
                4
            ],
            "type": "Point"
        }
    },
    "operationSpace": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                1,
                2,
                4
            ],
            "type": "Point"
        }
    },
    "type": "T"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
