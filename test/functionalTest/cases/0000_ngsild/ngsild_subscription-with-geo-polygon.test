# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription with geo-polygon and its retrieval

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. A subscription with geo-location is created
# 02. GET the subscription to see the geo-data intact
#

echo "01. A subscription with geo-location is created"
echo "==============================================="
payload='{
  "id": "urn:ngsi-ld:Subscription:mySubscription123",
  "type": "Subscription",
  "entities": [
    {
     "type": "Vehicle"
    }
  ],
  "watchedAttributes": ["speed"],
  "q": "speed>50",
  "geoQ": {
    "georel": "within",
    "geometry": "Polygon",
    "coordinates": [ [ 1.1, -1.2 ], [ 1.001, 2.123 ], [ -2.001, -1.123 ], [ 1.1, -1.2 ] ]
  },
  "notification": {
    "attributes": ["speed"],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://my.endpoint.org/notify",
      "accept": "application/json"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions -X POST --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "02. GET the subscription to see the geo-data intact"
echo "==================================================="
SUB_ID=$(mongoCmd2 ftest "db.csubs.findOne()" | grep '"_id" : "' | awk -F\"  '{ print $4 }')
orionCurl --url /ngsi-ld/v1/subscriptions/$SUB_ID
echo
echo


--REGEXPECT--
01. A subscription with geo-location is created
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:mySubscription123
Date: REGEX(.*)



02. GET the subscription to see the geo-data intact
===================================================
HTTP/1.1 200 OK
Content-Length: 406
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "entities": [
        {
            "type": "Vehicle"
        }
    ],
    "geoQ": {
        "coordinates": [
            [
                1.1,
                -1.2
            ],
            [
                1.001,
                2.123
            ],
            [
                -2.001,
                -1.123
            ],
            [
                1.1,
                -1.2
            ]
        ],
        "geometry": "Polygon",
        "georel": "within"
    },
    "id": "urn:ngsi-ld:Subscription:mySubscription123",
    "notification": {
        "attributes": [
            "speed"
        ],
        "endpoint": {
            "accept": "application/json",
            "uri": "http://my.endpoint.org/notify"
        },
        "format": "keyValues"
    },
    "q": "speed>50",
    "type": "Subscription",
    "watchedAttributes": [
        "speed"
    ]
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
