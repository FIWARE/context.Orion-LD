# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Throttling with milliseconds

--SHELL-INIT--
# Copied from ngsild_subscription_throttling_with_milliseconds.test
dbInit CB
orionldStart CB -experimental
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}

--SHELL--

#
# 01. Create an entity E1
# 02. Create a subscription with a throttling of 0.5 seconds, matching E1
# 03. Update E1 during three seconds
# 04. Get number of notifications from accumulator - see 6 notifications
#

echo "01. Create an entity E1"
echo "======================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": 1
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Create a subscription with a throttling of 0.5 seconds, matching E1"
echo "======================================================================="
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "entities": [
    {
      "id": "urn:ngsi-ld:entities:E1",
      "type": "T"
    }
  ],
  "watchedAttributes": [ "P1" ],
  "notification": {
    "attributes": [ "P1" ],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "accept": "application/json"
    }
  },
  "throttling": 0.5
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "03. Update E1 during three seconds"
echo "=================================="
echo "Output cut as we can't possibly know how many updates are done during the three seconds"
startSecs=$(date +%s)
startNanoSecs=$(date +%N)
typeset -i istartSecs
typeset -i istartNanoSecs
typeset -i isecs
typeset -i inanosecs
typeset -i isecsDiff
typeset -i inanosecsDiff

istartSecs=$startSecs
istartNanoSecs=$(echo $startNanoSecs | bc)

typeset -i loops
loops=0
while /bin/true
do
  loops=$loops+1

  payload='{
    "P1": {
      "type": "Property",
      "value": '$loops'
    }
  }'
  orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1/attrs -X PATCH --payload "$payload" > /dev/null 
  secs=$(date +%s)
  nanoSecs=$(date +%N)
  isecs=$secs
  inanosecs=$(echo $nanoSecs | bc)
  isecsDiff=$(echo $isecs - $istartSecs | bc)
  inanosecsDiff=$(echo $inanosecs - $istartNanoSecs | bc)
  if [ $inanosecsDiff -lt 0 ]
  then
    isecsDiff=$isecsDiff-1
    inanosecsDiff=$inanosecsDiff+1000000000
  fi
  if [ $isecsDiff -ge 3 ]
  then
    break
  fi
done
echo
echo

 
echo "04. Get number of notifications from accumulator - see 6 notifications"
echo "======================================================================"
accumulatorCount
echo
echo


--REGEXPECT--
01. Create an entity E1
=======================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1



02. Create a subscription with a throttling of 0.5 seconds, matching E1
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub01



03. Update E1 during three seconds
==================================
Output cut as we can't possibly know how many updates are done during the three seconds


04. Get number of notifications from accumulator - see 6 notifications
======================================================================
REGEX((5|6))


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
