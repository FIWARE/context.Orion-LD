# Copyright 2024 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
VocabularyProperty

--SHELL-INIT--
dbInit CB

orionldStart CB -experimental
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription on entity type T
# 02. Create an entity urn:E1, type T, with a VocabularyProperty V1: "abc"
# 03. Create an entity urn:E2, type T, with a VocabularyProperty V2: [ "vocab", "id" ]
# 04. Create an entity urn:E3, type T, with a VocabularyProperty V3: [ "test" ] - array of one item - flattened to String
# 05. GET urn:E1 to see V1
# 05b. See urn:E1 in the DB - see "abc" expanded
# 06. GET urn:E2 to see V2
# 06b. See urn:E2 in the DB - see [ "vocab", "id" ] expanded
# 07. GET urn:E3 to see V3 - see V3 as a string
# 07b. See urn:E3 in the DB - see "test" expanded and V3 as a string, not an array
#
# 08. Dump/Reset accumulator, see urn:E1+V1 and urn:E2+V2
#
# 09. GET urn:E2 in simplified format
# 10. Query entities with q=V1==abc => see nothing
# 11. Query entities with q=V1==abc&expandValues=V1,V2 => see urn:E1
# 12. Query entities with q=V2==id&expandValues=V1,V2 => see urn:E2
#

echo '01. Create a subscription on entity type T'
echo '=========================================='
payload='{
  "id": "urn:ngsi-ld:subs:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "T"
    }
  ],
  "notification": {
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    },
    "showChanges": true
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo '02. Create an entity urn:E1, type T, with a VocabularyProperty V1: "abc"'
echo '========================================================================'
payload='{
  "id": "urn:E1",
  "type": "T",
  "V1": { "vocab": "abc" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo '03. Create an entity urn:E2, type T, with a VocabularyProperty V2: [ "vocab", "id" ]'
echo '===================================================================================='
payload='{
  "id": "urn:E2",
  "type": "T",
  "V2": { "vocab": [ "vocab", "id" ] }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo '04. Create an entity urn:E3, type T, with a VocabularyProperty V3: [ "test" ] - array of one item - flattened to String'
echo '======================================================================================================================='
payload='{
  "id": "urn:E3",
  "type": "T",
  "V2": { "vocab": [ "test" ] }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo '05. GET urn:E1 to see V1'
echo '========================'
orionCurl --url /ngsi-ld/v1/entities/urn:E1
echo
echo


echo '05b. See urn:E1 in the DB - see "abc" expanded'
echo '=============================================='
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:E1"})'
echo
echo


echo '06. GET urn:E2 to see V2'
echo '========================'
orionCurl --url /ngsi-ld/v1/entities/urn:E2
echo
echo


echo '06b. See urn:E2 in the DB - see [ "vocab", "id" ] expanded'
echo '=========================================================='
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:E2"})'
echo
echo


echo '07. GET urn:E3 to see V3 - see V3 as a string'
echo '============================================='
orionCurl --url /ngsi-ld/v1/entities/urn:E3
echo
echo


echo '07b. See urn:E3 in the DB - see "test" expanded and V3 as a string, not an array'
echo '================================================================================'
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:E3"})'
echo
echo


echo "08. Dump/Reset accumulator, see urn:E1+V1 and urn:E2+V2"
echo "======================================================="
sleep .2
accumulatorDump
accumulatorReset
echo
echo


echo "09. GET urn:E2 in simplified format"
echo "==================================="
orionCurl --url /ngsi-ld/v1/entities/urn:E2?options=simplified
echo
echo


echo "10. Query entities with q=V1==abc => see nothing"
echo "================================================"
orionCurl --url /ngsi-ld/v1/entities?q=V1==%22abc%22
echo
echo


echo "11. Query entities with q=V1==abc&expandValues=V1,V2 => see urn:E1"
echo "=================================================================="
orionCurl --url '/ngsi-ld/v1/entities?q=V1==%22abc%22&expandValues=V1,V2'
echo
echo


echo "12. Query entities with q=V2==id&expandValues=V1,V2 => see urn:E2"
echo "================================================================="
orionCurl --url '/ngsi-ld/v1/entities?q=V2==%22id%22&expandValues=V1,V2'
echo
echo


--REGEXPECT--
01. Create a subscription on entity type T
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1



02. Create an entity urn:E1, type T, with a VocabularyProperty V1: "abc"
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



03. Create an entity urn:E2, type T, with a VocabularyProperty V2: [ "vocab", "id" ]
====================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E2



04. Create an entity urn:E3, type T, with a VocabularyProperty V3: [ "test" ] - array of one item - flattened to String
=======================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E3



05. GET urn:E1 to see V1
========================
HTTP/1.1 200 OK
Content-Length: 75
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "V1": {
        "type": "VocabularyProperty",
        "vocab": "abc"
    },
    "id": "urn:E1",
    "type": "T"
}


05b. See urn:E1 in the DB - see "abc" expanded
==============================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/V1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/V1" : {
			"type" : "VocabularyProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "https://uri.etsi.org/ngsi-ld/default-context/abc",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


06. GET urn:E2 to see V2
========================
HTTP/1.1 200 OK
Content-Length: 84
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "V2": {
        "type": "VocabularyProperty",
        "vocab": [
            "vocab",
            "id"
        ]
    },
    "id": "urn:E2",
    "type": "T"
}


06b. See urn:E2 in the DB - see [ "vocab", "id" ] expanded
==========================================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:E2",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/V2"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/V2" : {
			"type" : "VocabularyProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : [
				"https://uri.etsi.org/ngsi-ld/default-context/vocab",
				"@id"
			],
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


07. GET urn:E3 to see V3 - see V3 as a string
=============================================
HTTP/1.1 200 OK
Content-Length: 76
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "V2": {
        "type": "VocabularyProperty",
        "vocab": "test"
    },
    "id": "urn:E3",
    "type": "T"
}


07b. See urn:E3 in the DB - see "test" expanded and V3 as a string, not an array
================================================================================
MongoDB shell version v4.4.28
connecting to: mongodb://localhost:27017/ftest?compressors=disabled&gssapiServiceName=mongodb
MongoDB server version: 4.4.22
{
	"_id" : {
		"id" : "urn:E3",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/V2"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/V2" : {
			"type" : "VocabularyProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "https://uri.etsi.org/ngsi-ld/default-context/test",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


08. Dump/Reset accumulator, see urn:E1+V1 and urn:E2+V2
=======================================================
POST http://REGEX(.*)/notify?subscriptionId=urn:ngsi-ld:subs:S1
Content-Length: 256
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "V1": {
                "type": "VocabularyProperty",
                "vocab": "abc"
            },
            "id": "urn:E1",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:ngsi-ld:subs:S1",
    "type": "Notification"
}
=======================================
POST http://REGEX(.*)/notify?subscriptionId=urn:ngsi-ld:subs:S1
Content-Length: 265
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "V2": {
                "type": "VocabularyProperty",
                "vocab": [
                    "vocab",
                    "id"
                ]
            },
            "id": "urn:E2",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:ngsi-ld:subs:S1",
    "type": "Notification"
}
=======================================
POST http://REGEX(.*)/notify?subscriptionId=urn:ngsi-ld:subs:S1
Content-Length: 257
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "V2": {
                "type": "VocabularyProperty",
                "vocab": "test"
            },
            "id": "urn:E3",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:ngsi-ld:subs:S1",
    "type": "Notification"
}
=======================================


09. GET urn:E2 in simplified format
===================================
HTTP/1.1 200 OK
Content-Length: 56
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "V2": {
        "vocab": [
            "vocab",
            "id"
        ]
    },
    "id": "urn:E2",
    "type": "T"
}


10. Query entities with q=V1==abc => see nothing
================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

[]


11. Query entities with q=V1==abc&expandValues=V1,V2 => see urn:E1
==================================================================
HTTP/1.1 200 OK
Content-Length: 77
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "V1": {
            "type": "VocabularyProperty",
            "vocab": "abc"
        },
        "id": "urn:E1",
        "type": "T"
    }
]


12. Query entities with q=V2==id&expandValues=V1,V2 => see urn:E2
=================================================================
HTTP/1.1 200 OK
Content-Length: 86
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "V2": {
            "type": "VocabularyProperty",
            "vocab": [
                "vocab",
                "id"
            ]
        },
        "id": "urn:E2",
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
