# Copyright 2021 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Creation and DB Content

--SHELL-INIT--
export BROKER=orionld
dbInit CB
dbInit CB openiot
brokerStart CB 0-255 IPv4 -multiservice
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription on Entity ID Pattern and without ID
# 02. Create an entity matching the subscription
# 03. See the notification in the accumulator
#


echo "01. Create a subscription on Entity ID Pattern and without ID"
echo "============================================================="
payload='{
  "description": "Notify me of low feedstock on Farm:001",
  "type": "Subscription",
  "entities": [
    {
      "type": "BlowerDevice",
      "idPattern": ".*"
    }
  ],
  "watchedAttributes": ["airflow"],
  "notification": {
    "format": "keyValues",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/notify"
    }   
  },
  "@context": "https://smartdatamodels.org/context.jsonld"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" --in application/ld+json --tenant openiot
echo
echo


echo "02. Create an entity matching the subscription"
echo "=============================================="
payload='{
  "id": "urn:ngsi-ld:Blower:bd01",
  "type": "BlowerDevice",
  "airflow": {
    "type": "Property",
    "value": 127
  },
  "@context": "https://smartdatamodels.org/context.jsonld"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --in application/ld+json --tenant openiot
echo
echo


echo "03. See the notification in the accumulator"
echo "==========================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create a subscription on Entity ID Pattern and without ID
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/REGEX(.*)
Date: REGEX(.*)



02. Create an entity matching the subscription
==============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Blower:bd01
Date: REGEX(.*)



03. See the notification in the accumulator
===========================================
POST http://REGEX(.*)/notify
Fiware-Servicepath: /
Content-Length: 267
User-Agent: REGEX(.*)
Ngsiv2-Attrsformat: keyValues
Host: localhost:REGEX(.*)
Accept: application/json
Link: <https://smartdatamodels.org/context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Tenant: openiot
Content-Type: application/json; charset=utf-8

{
    "data": [
        {
            "airflow": 127, 
            "id": "urn:ngsi-ld:Blower:bd01", 
            "type": "BlowerDevice"
        }
    ], 
    "id": "urn:ngsi-ld:Notification:REGEX(.*)", 
    "notifiedAt": "REGEX(.*)", 
    "subscriptionId": "urn:ngsi-ld:Subscription:REGEX(.*)", 
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
dbDrop openiot
