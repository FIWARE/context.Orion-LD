# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
New subscription with q on sub-attr: EQ

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}

--SHELL--

#
# 01. Create a subscription S1 with q=A.B==3
# 02. Create a matching Entity E1
# 03. Create a non-matching Entity E2
# 04. Dump accumulator - see notification for E1
#

echo "01. Create a subscription S1 with q=A.B==3"
echo "=========================================="
payload='{
  "id": "urn:ngsi-ld:subs:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "T"
    }
  ],
  "q": "A.B==3",
  "notification": {
    "format": "simplified",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Create a matching Entity E1"
echo "==============================="
payload='{
  "id": "urn:ngsi-ld:entities:T:E1",
  "type": "T",
  "A": {
    "B": 3,
    "value": 2
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "03. Create a non-matching Entity E2"
echo "==================================="
payload='{
  "id": "urn:ngsi-ld:entities:T:E2",
  "type": "T",
  "A": {
    "B": 2,
    "value": 3
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "04. Dump accumulator - see notification for E1"
echo "=============================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create a subscription S1 with q=A.B==3
==========================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1



02. Create a matching Entity E1
===============================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E1



03. Create a non-matching Entity E2
===================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:T:E2



04. Dump accumulator - see notification for E1
==============================================
POST http://REGEX(.*)/notify?subscriptionId=urn:ngsi-ld:subs:S1
Content-Length: 232
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Simplified

{
    "data": [
        {
            "A": 2,
            "id": "urn:ngsi-ld:entities:T:E1",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)",
    "subscriptionId": "urn:ngsi-ld:subs:S1",
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
