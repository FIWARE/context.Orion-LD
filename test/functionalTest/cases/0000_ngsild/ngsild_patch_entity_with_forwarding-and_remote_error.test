# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Distributed PATCH of entity (old /attrs) with a remote error

--SHELL-INIT--
dbInit CB
dbInit CP1
orionldStart CB  -experimental -forwarding
orionldStart CP1 -experimental

--SHELL--
#
# 01. In CB, create an entity urn:E1 with an attribute P1
# 02. Create an exclusive registration R1 on urn:E1/P2 for CP1
# 03. Attempt to PATCH urn:E1/P2 (urn:E1 doesn't exist in CP1) - see error coming from CP1 in the 207)
#

echo "01. In CB, create an entity urn:E1 with an attribute P1"
echo "======================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 1
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Create an exclusive registration R1 on urn:E1/P2 for CP1"
echo "============================================================"
payload='{
  "id": "urn:ngsi-ld:registration:R1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "propertyNames": [ "P2" ]
    }
  ],
  "mode": "exclusive",
  "operations": [ "updateEntity", "retrieveEntity" ],
  "endpoint": "http://localhost:'$CP1_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "03. Attempt to PATCH urn:E1/P2 (urn:E1 doesn't exist in CP1) - see error coming from CP1 in the 207)"
echo "===================================================================================================="
payload='{
  "P1": 3,
  "P2": "For CP1, but 404 due to entity"
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1/attrs --payload "$payload" -X PATCH
echo
echo


--REGEXPECT--
01. In CB, create an entity urn:E1 with an attribute P1
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. Create an exclusive registration R1 on urn:E1/P2 for CP1
============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:registration:R1



03. Attempt to PATCH urn:E1/P2 (urn:E1 doesn't exist in CP1) - see error coming from CP1 in the 207)
====================================================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 169
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "notUpdated": [
        {
            "attributes": [
                "P2"
            ],
            "detail": "urn:E1",
            "registrationId": "urn:ngsi-ld:registration:R1",
            "statusCode": 404,
            "title": "Entity does not exist"
        }
    ],
    "updated": [
        "P1"
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
dbDrop CB
dbDrop CP1
