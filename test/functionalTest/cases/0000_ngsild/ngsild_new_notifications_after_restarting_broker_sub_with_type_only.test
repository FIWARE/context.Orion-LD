# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notifications after killing and restarting broker - sub on type only

--SHELL-INIT--
# Copied from ngsild_notifications_after_restarting_broker_sub_with_type_only.test
dbInit CB
orionldStart CB -experimental
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT} -v

--SHELL--

#
# 01. Create an Entity E01 with attr P1 and P2
# 02. Create a subscription with accumulator receiving notifications for ALL attributes of type T
# 03. See subscription in DB
# 04. Add P3 to E01
# 05. Dump accumulator to see one notification - NGSI-LD has no initial notifications
# 06. Kill and restart Broker
# 07. Add P4 to E01
# 08. Dump accumulator to see one notification
#

echo "01. Create an Entity E01 with attr P1 and P2"
echo "============================================"
payload='{
  "id": "urn:ngsi-ld:E01",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": 1
  },
  "P2": {
    "type": "Property",
    "value": "ok"
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "02. Create a subscription with accumulator receiving notifications for ALL attributes of E01"
echo "============================================================================================"
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Sub 01",
  "description": "receiving notifications for ALL attributes of type T",
  "entities": [
    {
      "type": "T"
    }
  ],
  "notification": {
    "format": "normalized",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "accept": "application/json"
    }
  },
  "expires": "2028-12-31T10:00:00"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "03. See subscription in DB"
echo "=========================="
mongoCmd2 ftest "db.csubs.findOne()"
echo
echo


echo "04. Add P3 to E01"
echo "================="
payload='{
  "P3": {
    "type": "Property",
    "value": 3
  }
}'
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:E01/attrs?options=noOverwrite' --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "05. Dump accumulator to see one notification - NGSI-LD has no initial notifications"
echo "==================================================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "06. Kill and restart Broker"
echo "==========================="
brokerStop CB
orionldStart CB -experimental
sleep 2  # give the poor broker some time to start (not really necessary)
echo
echo


echo "07. Add P4 to E01"
echo "================="
payload='{
  "P4": {
    "type": "Property",
    "value": 4
  }
}'
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:E01/attrs?options=noOverwrite' --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "08. Dump accumulator to see one notification"
echo "============================================"
sleep .2
accumulatorDump
echo
echo


--REGEXPECT--
01. Create an Entity E01 with attr P1 and P2
============================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:E01



02. Create a subscription with accumulator receiving notifications for ALL attributes of E01
============================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub01



03. See subscription in DB
==========================
MongoDB shell version REGEX(.*)
connecting to: mongodb:REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : "http://a.b.c/subs/sub01",
	"name" : "Sub 01",
	"description" : "receiving notifications for ALL attributes of type T",
	"entities" : [
		{
			"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
			"id" : ".*",
			"isPattern" : "true",
			"isTypePattern" : false
		}
	],
	"expiration" : REGEX(.*),
	"createdAt" : REGEX(.*),
	"modifiedAt" : REGEX(.*),
	"throttling" : 0,
	"expression" : {
		"geometry" : "",
		"coords" : "",
		"georel" : "",
		"geoproperty" : "",
		"q" : "",
		"mq" : ""
	},
	"format" : "normalized",
	"reference" : "http://127.0.0.1:9997/notify",
	"mimeType" : "application/json",
	"attrs" : [ ],
	"conditions" : [ ],
	"status" : "active",
	"custom" : false,
	"servicePath" : "/#",
	"blacklist" : false,
	"ldContext" : "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld"
}
bye


04. Add P3 to E01
=================
HTTP/1.1 204 No Content
Date: REGEX(.*)



05. Dump accumulator to see one notification - NGSI-LD has no initial notifications
===================================================================================
POST http://REGEX(.*)/notify?subscriptionId=http://a.b.c/subs/sub01
Content-Length: 328
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "P1": {
                "type": "Property",
                "value": 1
            },
            "P2": {
                "type": "Property",
                "value": "ok"
            },
            "P3": {
                "type": "Property",
                "value": 3
            },
            "id": "urn:ngsi-ld:E01",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX([0-9a-f\-]{36})",
    "notifiedAt": "REGEX(.*)",
    "subscriptionId": "http://a.b.c/subs/sub01",
    "type": "Notification"
}
=======================================


06. Kill and restart Broker
===========================


07. Add P4 to E01
=================
HTTP/1.1 204 No Content
Date: REGEX(.*)



08. Dump accumulator to see one notification
============================================
POST http://REGEX(.*)/notify?subscriptionId=http://a.b.c/subs/sub01
Content-Length: 363
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "P1": {
                "type": "Property",
                "value": 1
            },
            "P2": {
                "type": "Property",
                "value": "ok"
            },
            "P3": {
                "type": "Property",
                "value": 3
            },
            "P4": {
                "type": "Property",
                "value": 4
            },
            "id": "urn:ngsi-ld:E01",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX([0-9a-f\-]{36})",
    "notifiedAt": "REGEX(.*)",
    "subscriptionId": "http://a.b.c/subs/sub01",
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
