# Copyright 2021 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscriptions MUST contain an endpoint

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Attempt to create a subscription without 'notification' - see it fail
# 02. Attempt to create a subscription without 'notification::endpoint' - see it fail
# 03. Attempt to create a subscription without 'notification::endpoint::uri' - see it fail
#

echo "01. Attempt to create a subscription without 'notification' - see it fail"
echo "========================================================================="
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Test subscription 01",
  "description": "Description of Test subscription 01",
  "entities": [
    {
      "id": "urn:ngsi-ld:E01",
      "type": "T1"
    },
    {
      "id": "http://a.b.c/E02",
      "type": "T2"
    },
    {
      "idPattern": ".*E03.*",
      "type": "T3"
    }
  ],
  "watchedAttributes": [ "P2" ],
  "q": "P2>10",
  "geoQ": {
    "geometry": "circle",
    "coordinates": "1,2",
    "georel": "near",
    "geoproperty": "not supported"
  },
  "csf": "not implemented",
  "isActive": false,
  "expires": "2028-12-31T10:00:00.123",
  "throttling": 5
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Attempt to create a subscription without 'notification::endpoint' - see it fail"
echo "==================================================================================="
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Test subscription 01",
  "description": "Description of Test subscription 01",
  "entities": [
    {
      "id": "urn:ngsi-ld:E01",
      "type": "T1"
    },
    {
      "id": "http://a.b.c/E02",
      "type": "T2"
    },
    {
      "idPattern": ".*E03.*",
      "type": "T3"
    }
  ],
  "watchedAttributes": [ "P2" ],
  "q": "P2>10",
  "geoQ": {
    "geometry": "circle",
    "coordinates": "1,2",
    "georel": "near",
    "geoproperty": "not supported"
  },
  "csf": "not implemented",
  "isActive": false,
  "notification": {
    "attributes": [ "P1", "P2", "A3" ],
    "format": "keyValues",
    "status": "ignored",
    "timesSent": "ignored",
    "lastNotification": "ignored",
    "lastFailure": "ignored",
    "lastSuccess": "ignored"
  },
  "expires": "2028-12-31T10:00:00.123",
  "throttling": 5
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "03. Attempt to create a subscription without 'notification::endpoint::uri' - see it fail"
echo "========================================================================================"
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Test subscription 01",
  "description": "Description of Test subscription 01",
  "entities": [
    {
      "id": "urn:ngsi-ld:E01",
      "type": "T1"
    },
    {
      "id": "http://a.b.c/E02",
      "type": "T2"
    },
    {
      "idPattern": ".*E03.*",
      "type": "T3"
    }
  ],
  "watchedAttributes": [ "P2" ],
  "q": "P2>10",
  "geoQ": {
    "geometry": "circle",
    "coordinates": "1,2",
    "georel": "near",
    "geoproperty": "not supported"
  },
  "csf": "not implemented",
  "isActive": false,
  "notification": {
    "endpoint": {
      "accept": "application/ld+json"
    },
    "attributes": [ "P1", "P2", "A3" ],
    "format": "keyValues",
    "status": "ignored",
    "timesSent": "ignored",
    "lastNotification": "ignored",
    "lastFailure": "ignored",
    "lastSuccess": "ignored"
  },
  "expires": "2028-12-31T10:00:00.123",
  "throttling": 5
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


--REGEXPECT--
01. Attempt to create a subscription without 'notification' - see it fail
=========================================================================
HTTP/1.1 400 Bad Request
Content-Length: 133
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Subscription::notification",
    "title": "Mandatory field missing",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


02. Attempt to create a subscription without 'notification::endpoint' - see it fail
===================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 143
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Subscription::notification::endpoint",
    "title": "Mandatory field missing",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


03. Attempt to create a subscription without 'notification::endpoint::uri' - see it fail
========================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 148
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Subscription::notification::endpoint::uri",
    "title": "Mandatory field missing",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
