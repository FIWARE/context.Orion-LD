# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Issue #1322

--SHELL-INIT--
${SCRIPT_HOME}/httpsPrepare.sh --keyFileName /tmp/harnessTest.key --certFileName /tmp/harnessTest.pem
export BROKER=orionld
dbInit CB
dbInit CB captn
orionldStart CB -experimental -mongocOnly -multiservice
accumulatorStart --pretty-print --url /yvonne 127.0.0.1 $LISTENER_PORT
accumulatorStart --pretty-print --https --key /tmp/harnessTest.key --cert /tmp/harnessTest.pem --url /yvonne 127.0.0.1 $LISTENER2_PORT

--SHELL--

#
# 01. Create the entity for the test - as described in issue #1322
# 02. Create a matching subscription urn:S1 to a non-existent endpoint
# 03. Create a matching subscription urn:S2 to a non-existent endpoint
# 04. Update the entity - this is where the broker crashes according to issue #1322
# 05. Dump accumulators and see the two notifications
# 06. GET the entity (and thus making sure the broker is still alive)
#

echo "01. Create the entity for the test - as described in issue #1322"
echo "================================================================"
payload='{
  "id": "urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020",
  "type": "WeatherObserved",
  "dateObserved": {
    "type": "Property",
    "value": {
      "@type": "DateTime",
      "@value": "2021-02-08T13:13:14.000Z"
    }
  },
  "atmosphericPressure": {
    "type": "Property",
    "value": 0
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --tenant captn
echo
echo


echo "02. Create a matching subscription urn:S1 to a non-existent endpoint"
echo "===================================================================="
payload='{
  "id": "urn:S1",
  "type": "Subscription",
  "subscriptionName": "Notify NR WeatherObserved zu addixio",
  "description": "NR WeatherObserved zu addixio",
  "entities": [
    {
      "idPattern": "WeatherObserved",
      "type": "WeatherObserved"
    }
  ],
  "watchedAttributes": [ "dateObserved" ],
  "isActive": true,
  "notification": {
    "attributes": [ "location", "atmosphericPressure", "dateObserved" ],
    "format": "normalized",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/yvonne",
      "accept": "application/json"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" --tenant captn
echo
echo



echo "03. Create a matching subscription urn:S2 to a non-existent endpoint"
echo "===================================================================="
payload='{
  "id": "urn:S2",
  "type": "Subscription",
  "subscriptionName": "Notify NR WeatherObserved zu addixio",
  "description": "NR WeatherObserved zu addixio",
  "entities": [
    {
      "idPattern": "WeatherObserved",
      "type": "WeatherObserved"
    }
  ],
  "watchedAttributes": [ "dateObserved" ],
  "isActive": true,
  "notification": {
    "attributes": [ "location", "atmosphericPressure", "dateObserved" ],
    "format": "normalized",
    "endpoint": {
      "uri": "https://localhost:'$LISTENER2_PORT'/yvonne",
      "accept": "application/json"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" --tenant captn
echo
echo


echo "04. Update the entity - this is where the broker crashes according to issue #1322"
echo "================================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020",
    "type": "WeatherObserved",
    "dateObserved": {
      "type": "Property",
      "value": {
        "@type": "DateTime",
        "@value": "2023-02-08T13:13:14.000Z"
      }
    },
    "atmosphericPressure": {
      "type": "Property",
      "value": 1037
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert?options=update --payload "$payload" -H 'fiware-service: captn' -H 'fiware-servicepath: /' --tenant captn -H 'Authorization: Bearer {myToken}'
echo
echo


echo "05. Dump accumulators and see the two notifications"
echo "==================================================="
accumulatorDump
accumulator2Dump IPV4 HTTPS
echo
echo


echo "06. GET the entity urn:E1 (and thus making sure the broker is still alive)"
echo "=========================================================================="
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020 --tenant captn
echo
echo


--REGEXPECT--
01. Create the entity for the test - as described in issue #1322
================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020
NGSILD-Tenant: captn



02. Create a matching subscription urn:S1 to a non-existent endpoint
====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:S1
NGSILD-Tenant: captn



03. Create a matching subscription urn:S2 to a non-existent endpoint
====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:S2
NGSILD-Tenant: captn



04. Update the entity - this is where the broker crashes according to issue #1322
=================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



05. Dump accumulators and see the two notifications
===================================================
POST http://REGEX(.*)/yvonne?subscriptionId=urn:S1
Content-Length: 403
Authorization: Bearer {myToken}
User-Agent: orionld/REGEX(.*)
Accept: application/json
Ngsild-Tenant: captn
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "atmosphericPressure": {
                "type": "Property",
                "value": 1037
            },
            "dateObserved": {
                "type": "Property",
                "value": {
                    "@type": "DateTime",
                    "@value": "2023-02-08T13:13:14.000Z"
                }
            },
            "id": "urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020",
            "type": "WeatherObserved"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:S1",
    "type": "Notification"
}
=======================================
POST https://REGEX(.*)/yvonne
Content-Length: 403
Authorization: Bearer {myToken}
User-Agent: orionld/REGEX(.*)
Host: localhost:9977
Accept: application/json
Ngsild-Tenant: captn
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "atmosphericPressure": {
                "type": "Property",
                "value": 1037
            },
            "dateObserved": {
                "type": "Property",
                "value": {
                    "@type": "DateTime",
                    "@value": "2023-02-08T13:13:14.000Z"
                }
            },
            "id": "urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020",
            "type": "WeatherObserved"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:S1",
    "type": "Notification"
}
=======================================


06. GET the entity urn:E1 (and thus making sure the broker is still alive)
==========================================================================
HTTP/1.1 200 OK
Content-Length: 235
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
NGSILD-Tenant: captn

{
    "atmosphericPressure": {
        "type": "Property",
        "value": 1037
    },
    "dateObserved": {
        "type": "Property",
        "value": {
            "@type": "DateTime",
            "@value": "2023-02-08T13:13:14.000Z"
        }
    },
    "id": "urn:ngsi-ld:WeatherObserved:ADDIX:owm:54461020",
    "type": "WeatherObserved"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
dbDrop CB captn
accumulatorStop $LISTENER_PORT
accumulatorStop $LISTENER2_PORT
