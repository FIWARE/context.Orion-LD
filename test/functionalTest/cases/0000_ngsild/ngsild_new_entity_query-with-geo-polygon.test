# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Geoquery with polygons

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# Valid Georel for Polygon:
# - within (for a point)
# - intersect
# - contains
#
# What to test:
#   - Entity as polygon and query with a point that is inside the entity-polygon (georel: near -> match)
#   - Entity as polygon and query with a point that is not inside the entity-polygon (georel: near -> no match)
#   - Entity as point and query with a polygon that covers the entity-point (georel: within -> match)
#   - Entity as point and query with a polygon that does not cover the entity-point (georel: within -> no match)
#   - Entity as polygon and query with a polygon that is completely inside the entity-polygon (georel: contains -> match)
#   - Entity as polygon and query with a polygon that is completely outside the entity-polygon (georel: contains -> no match)
#   - Entity as polygon and query with a polygon that intersects the entity-polygon (georel: intersect -> match)
#

#
# 01. Create entity E1 as Rectangle Geo-polygon 0,0 ->  4,0 4,-2 -> 0,-2 -> 0,0
# 02. Create entity E2 as a Geo-point { 3, -1 } i.e. inside E1
# 03. Query all entities using a point inside the rectangle: 2,-1 - see E1
# 04. Query all entities using a point outside the rectangle: 2,1 - see nothing
# 05. Query all entities using a rectangle covering E2 and WITHIN:  - see E2
# 06. Query all entities using a rectangle NOT covering E2 and WITHIN:  - see nothing
# 07. Query all entities using a rectangle covering E1+E2 and INTERSECT - see E1+E2
# 08. Query all entities using a rectangle covering E1 and INTERSECT - see E1
# 09. Query all entities using a rectangle NOT covering E2 and INTERSECT - see nothing
#

echo "01. Create entity E1 as Rectangle Geo-polygon 0,0 ->  4,0 4,-2 -> 0,-2 -> 0,0"
echo "============================================================================="
payload='{
  "id": "urn:ngsi-ld:geo:E1",
  "type": "Geo",
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "Polygon",
      "coordinates": [[ [0,0], [4,0], [4,-2], [0,-2], [0,0] ]]
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "02. Create entity E2 as a Geo-point { 3, -1 } i.e. inside E1"
echo "============================================================"
payload='{
  "id": "urn:ngsi-ld:geo:E2",
  "type": "Geo",
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [ 3, -1 ]
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "03. Query all entities using a point inside the rectangle: 2,-1 - see E1"
echo "========================================================================"
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Point&coordinates=\[2,-1\]&georel=near;maxDistance==1'
echo
echo


echo "04. Query all entities using a point outside the rectangle: 2,1 - see nothing"
echo "============================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Point&coordinates=\[2,1\]&georel=near;maxDistance==1'
echo
echo


echo "05. Query all entities using a rectangle covering E2 and WITHIN:  - see E2"
echo "=========================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Polygon&coordinates=\[\[\[2,0\],\[0,5\],\[5,-2\],\[2,-2\],\[2,0\]\]\]&georel=within'
echo
echo


echo "06. Query all entities using a rectangle NOT covering E2 and WITHIN:  - see nothing"
echo "==================================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Polygon&coordinates=\[\[\[2,10\],\[5,10\],\[5,8\],\[2,8\],\[2,10\]\]\]&georel=within'
echo
echo


echo "07. Query all entities using a rectangle covering E1+E2 and INTERSECT - see E1+E2"
echo "================================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Polygon&coordinates=\[\[\[-1,-3\],\[-1,1\],\[4,1\],\[4,-3\],\[-1,-3\]\]\]&georel=intersects'
echo
echo


echo "08. Query all entities using a rectangle covering E1 and INTERSECT - see E1"
echo "==========================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Polygon&coordinates=\[\[\[3,0\],\[3,1\],\[4,1\],\[4,0\],\[3,0\]\]\]&georel=intersects'
echo
echo


echo "09. Query all entities using a rectangle NOT covering E2 nor E1 and INTERSECT - see nothing"
echo "==========================================================================================="
orionCurl --url '/ngsi-ld/v1/entities?type=Geo&geometry=Polygon&coordinates=\[\[\[8,5\],\[8,6\],\[9,6\],\[9,5\],\[8,5\]\]\]&georel=intersects'
echo
echo

--REGEXPECT--
01. Create entity E1 as Rectangle Geo-polygon 0,0 ->  4,0 4,-2 -> 0,-2 -> 0,0
=============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:geo:E1



02. Create entity E2 as a Geo-point { 3, -1 } i.e. inside E1
============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:geo:E2



03. Query all entities using a point inside the rectangle: 2,-1 - see E1
========================================================================
HTTP/1.1 200 OK
Content-Length: 153
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "id": "urn:ngsi-ld:geo:E1",
        "location": {
            "type": "GeoProperty",
            "value": {
                "coordinates": [
                    [
                        [
                            0,
                            0
                        ],
                        [
                            4,
                            0
                        ],
                        [
                            4,
                            -2
                        ],
                        [
                            0,
                            -2
                        ],
                        [
                            0,
                            0
                        ]
                    ]
                ],
                "type": "Polygon"
            }
        },
        "type": "Geo"
    }
]


04. Query all entities using a point outside the rectangle: 2,1 - see nothing
=============================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

[]


05. Query all entities using a rectangle covering E2 and WITHIN:  - see E2
==========================================================================
HTTP/1.1 200 OK
Content-Length: 122
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "id": "urn:ngsi-ld:geo:E2",
        "location": {
            "type": "GeoProperty",
            "value": {
                "coordinates": [
                    3,
                    -1
                ],
                "type": "Point"
            }
        },
        "type": "Geo"
    }
]


06. Query all entities using a rectangle NOT covering E2 and WITHIN:  - see nothing
===================================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

[]


07. Query all entities using a rectangle covering E1+E2 and INTERSECT - see E1+E2
=================================================================================
HTTP/1.1 200 OK
Content-Length: 274
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "id": "urn:ngsi-ld:geo:E1",
        "location": {
            "type": "GeoProperty",
            "value": {
                "coordinates": [
                    [
                        [
                            0,
                            0
                        ],
                        [
                            4,
                            0
                        ],
                        [
                            4,
                            -2
                        ],
                        [
                            0,
                            -2
                        ],
                        [
                            0,
                            0
                        ]
                    ]
                ],
                "type": "Polygon"
            }
        },
        "type": "Geo"
    },
    {
        "id": "urn:ngsi-ld:geo:E2",
        "location": {
            "type": "GeoProperty",
            "value": {
                "coordinates": [
                    3,
                    -1
                ],
                "type": "Point"
            }
        },
        "type": "Geo"
    }
]


08. Query all entities using a rectangle covering E1 and INTERSECT - see E1
===========================================================================
HTTP/1.1 200 OK
Content-Length: 153
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "id": "urn:ngsi-ld:geo:E1",
        "location": {
            "type": "GeoProperty",
            "value": {
                "coordinates": [
                    [
                        [
                            0,
                            0
                        ],
                        [
                            4,
                            0
                        ],
                        [
                            4,
                            -2
                        ],
                        [
                            0,
                            -2
                        ],
                        [
                            0,
                            0
                        ]
                    ]
                ],
                "type": "Polygon"
            }
        },
        "type": "Geo"
    }
]


09. Query all entities using a rectangle NOT covering E2 nor E1 and INTERSECT - see nothing
===========================================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
