# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Creation and Retrieval

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 212-249

--SHELL--

#
# 01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace
# 02. GET the entities
# 03. Modify E2 and add E3 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace
# 04. GET all entities - see all entities replaced and with new creDate and modDate fields
#


echo "01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace"
echo "============================================================================================"
payload='[
  {
    "id": "urn:ngsi-ld:entity:E1",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 01"
    }
  },
  {
    "id": "urn:ngsi-ld:entity:E2",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 01"
    }
  }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/upsert?options=replace" -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. GET the entities"
echo "===================="
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E1"})'
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E2"})'
echo
echo


#
# Sleep 2 secs to provoke a different modDate - creDate should stay intact
#
sleep 2


echo "03. Modify E2 and add E3 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace"
echo "======================================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:entity:E2",
    "type": "Vehicle",
    "P2": {
      "type": "Property",
      "value": "STEP 03"
    }
  },
  {
    "id": "urn:ngsi-ld:entity:E3",
    "type": "Vehicle",
    "P2": {
      "type": "Property",
      "value": "STEP 03"
    }
  }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/upsert?options=replace" -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "04. GET all entities - see all entities replaced and with new creDate and modDate fields"
echo "========================================================================================"
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E1"})'
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E2"})'
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E3"})'
echo


--REGEXPECT--
01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace
============================================================================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "success": [
        "urn:ngsi-ld:entity:E1",
        "urn:ngsi-ld:entity:E2"
    ],
    "errors": []
}


02. GET the entities
====================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 01",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E2",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 01",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. Modify E2 and add E3 using POST /ngsi-ld/v1/entityOperations/upsert?options=replace
=======================================================================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "success": [
        "urn:ngsi-ld:entity:E2",
        "urn:ngsi-ld:entity:E3"
    ],
    "errors": []
}


04. GET all entities - see all entities replaced and with new creDate and modDate fields
========================================================================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 01",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E2",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P2"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P2" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 03",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E3",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P2"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P2" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 03",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye

--TEARDOWN--
brokerStop CB
dbDrop CB
