# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Prometheus metrics - testing number of OK/Failed requests

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0 IPv4 -experimental
accumulatorStart

--SHELL--

#
# 01. Create a subscription S1 for accumulator on entity E1, attrs A1 and A2
# 02. Create a subscription S2 for nowhere on entity E1, attrs A2 and A3
# 03. Get Metrics - see zero notifications but two OK NGSI-LD Requests
# 04. Create E1, with attributes A1, A2, A3, and A4
# 05. Get Metrics - see TWO notifications, ONE of them failed
# 06. PATCH E1, updating A2
# 07. Get Metrics - see FOUR notifications, TWO of them failed
# 08. PATCH E1, updating A1
# 09. Get Metrics - see FIVE notifications, TWO of them failed
#
# NOTE:
#   I need to sleep a little, before asking for metrics - give some time for the notifications.
#   Remember - the broker responds to the create/update request before notifications are actually sent
#   - NEVER MIND - the sleep in baked into 'orionldMetrics()'
#

echo "01. Create a subscription S1 for accumulator on entity E1, attrs A1 and A2"
echo "=========================================================================="
payload='{
  "id": "urn:ngsi-ld:Subscription:S1",
  "type": "Subscription",
  "entities": [
    {
      "id": "urn:E1",
      "type": "T"
    }
  ],
  "watchedAttributes": [ "A1", "A2" ],
  "notification": {
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. Create a subscription S2 for nowhere on entity E1, attrs A2 and A3"
echo "======================================================================"
payload='{
  "id": "urn:ngsi-ld:Subscription:S2",
  "type": "Subscription",
  "entities": [
    {
      "id": "urn:E1",
      "type": "T"
    }
  ],
  "watchedAttributes": [ "A2", "A3" ],
  "notification": {
    "endpoint": {
      "uri": "http://a.b.c:21/no/where"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "03. Get Metrics - see zero notifications but two OK NGSI-LD Requests"
echo "===================================================================="
orionldMetrics
echo
echo


echo "04. Create E1, with attributes A1, A2, A3, and A4"
echo "================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "A1": 1,
  "A2": 2,
  "A3": 3
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "05. Get Metrics - see TWO notifications, ONE of them failed"
echo "==========================================================="
orionldMetrics
echo
echo


echo "06. PATCH E1, updating A2"
echo "========================="
payload='{
  "A2": 12
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --payload "$payload" -X PATCH
echo
echo


echo "07. Get Metrics - see FOUR notifications, TWO of them failed"
echo "============================================================"
orionldMetrics
echo
echo


echo "08. PATCH E1, updating A1"
echo "========================="
payload='{
  "A1": 11
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --payload "$payload" -X PATCH
echo
echo


echo "09. Get Metrics - see FIVE notifications, TWO of them failed"
echo "============================================================"
orionldMetrics
echo
echo


--REGEXPECT--
01. Create a subscription S1 for accumulator on entity E1, attrs A1 and A2
==========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:S1



02. Create a subscription S2 for nowhere on entity E1, attrs A2 and A3
======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:S2



03. Get Metrics - see zero notifications but two OK NGSI-LD Requests
====================================================================
ngsildRequests 2


04. Create E1, with attributes A1, A2, A3, and A4
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



05. Get Metrics - see TWO notifications, ONE of them failed
===========================================================
ngsildRequests 3
notifications 2
notificationsFailed 1


06. PATCH E1, updating A2
=========================
HTTP/1.1 204 No Content
Date: REGEX(.*)



07. Get Metrics - see FOUR notifications, TWO of them failed
============================================================
ngsildRequests 4
notifications 4
notificationsFailed 2


08. PATCH E1, updating A1
=========================
HTTP/1.1 204 No Content
Date: REGEX(.*)



09. Get Metrics - see FIVE notifications, TWO of them failed
============================================================
ngsildRequests 5
notifications 5
notificationsFailed 2


--TEARDOWN--
brokerStop CB
dbDrop CB
