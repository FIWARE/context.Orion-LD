# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Patching an entity triggering notifications crashes the broker (report by AWS)

--SHELL-INIT--
dbInit CB
export CB_TRACELEVELS=${CB_TRACELEVELS:-43,44,241}
orionldStart CB -mongocOnly -subCacheIval 1
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a "good" subscription
# 03. Create an entity matching the subscription
# 04. Dump accumulator, see one notification
# 05. Patch the entity 100 times, provoking 100 notifications
# 06. Dump accumulator, see 100 notifications
# 07. See the "good" subscription and its counters/timestamps
#


echo '01. Create a "good" subscription'
echo '================================'
payload='{
  "id": "urn:ngsi-ld:Subscription:SubscriptionPrivateSub",
  "type": "Subscription",
  "entities": [
    {
      "type": "IndoorEnvironmentObserved"
    }
  ],
  "q": "temperature>5",
  "notification": {
    "format": "keyValues",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "03. Create an entity matching the subscription"
echo "=============================================="
payload='{
  "id": "urn:ngsi-ld:IndoorEnvironmentObserved:TestToto",
  "type": "IndoorEnvironmentObserved",
  "dateObserved": {
    "type": "Property",
    "value": "2023-07-11T12:34:12Z"
  },
  "temperature": {
    "type": "Property",
    "value": 29.1,
    "unitCode": "CEL"
  },
  "co2": {
    "type": "Property",
    "value": 2001,
    "unitCode": "PPM"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "04. Dump accumulator, see one notification"
echo "=========================================="
accumulatorDump
accumulatorReset
echo
echo


echo "05. Patch the entity 100 times, provoking 100 notifications"
echo "==========================================================="
typeset -i temp
temp=6
while [ $temp -lt 106 ]
do
  payload='{ "temperature": '$temp' }'
  orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:IndoorEnvironmentObserved:TestToto/attrs --payload "$payload" -X PATCH
  temp=$temp+1
done | grep 204 | wc -l
echo
echo


echo "06. Dump accumulator, see 100 notifications"
echo "==========================================="
sleep 1
valgrindSleep 1
accumulatorDump | grep '"notifiedAt":' | wc -l
accumulatorReset
echo
echo


echo "07. See the "good" subscription and its counters/timestamps"
echo "==========================================================="
orionCurl --url /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:SubscriptionPrivateSub
echo
echo


--REGEXPECT--
01. Create a "good" subscription
================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:SubscriptionPrivateSub



03. Create an entity matching the subscription
==============================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:IndoorEnvironmentObserved:TestToto



04. Dump accumulator, see one notification
==========================================
POST http://REGEX(.*)/notify?subscriptionId=urn:ngsi-ld:Subscription:SubscriptionPrivateSub
Content-Length: 367
User-Agent: orionld/REGEX(.*)
Host: REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Simplified

{
    "data": [
        {
            "co2": 2001,
            "dateObserved": "202REGEX(.*)Z",
            "id": "urn:ngsi-ld:IndoorEnvironmentObserved:TestToto",
            "temperature": 29.1,
            "type": "IndoorEnvironmentObserved"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:ngsi-ld:Subscription:SubscriptionPrivateSub",
    "type": "Notification"
}
=======================================


05. Patch the entity 100 times, provoking 100 notifications
===========================================================
100


06. Dump accumulator, see 100 notifications
===========================================
100


07. See the good subscription and its counters/timestamps
===========================================================
HTTP/1.1 200 OK
Content-Length: 515
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "entities": [
        {
            "type": "IndoorEnvironmentObserved"
        }
    ],
    "id": "urn:ngsi-ld:Subscription:SubscriptionPrivateSub",
    "isActive": true,
    "jsonldContext": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.6.jsonld",
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://localhost:9997/notify"
        },
        "format": "keyValues",
        "lastNotification": "202REGEX(.*)Z",
        "lastSuccess": "202REGEX(.*)Z",
        "status": "ok",
        "timesSent": 101
    },
    "origin": "cache",
    "q": "temperature>5",
    "status": "active",
    "type": "Subscription"
}


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
