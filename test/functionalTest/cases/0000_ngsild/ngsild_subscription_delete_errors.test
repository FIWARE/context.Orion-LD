# Copyright 2018 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Deletion

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create subscription 'http://a.b.c/subs/sub01'
# 02. GET subscription 'http://a.b.c/subs/sub01' and see it
# 03. See the subscription in mongo
# 04. Delete subscription with incorrect uri format
# 05. Delete subscription that does not exist
#


echo "01. Create subscription 'http://a.b.c/subs/sub01'"
echo "================================================="
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Test subscription 01",
  "description": "Description of Test subscription 01",
  "entities": [
    {
      "id": "urn:ngsi-ld:E01",
      "type": "T1"
    },
    {
      "id": "http://a.b.c/E02",
      "type": "T2"
    },
    {
      "idPattern": ".*E03.*",
      "type": "T3"
    }
  ],
  "watchedAttributes": [ "P2" ],
  "q": "P2>10",
  "geoQ": {
    "geometry": "circle",
    "coordinates": "1,2",
    "georel": "near",
    "geoproperty": "not supported"
  },
  "csf": "not implemented",
  "isActive": false,
  "notification": {
    "attributes": [ "P1", "P2", "A3" ],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://valid.url/url",
      "accept": "application/ld+json"
    },
    "status": "ignored",
    "timesSent": "ignored",
    "lastNotification": "ignored",
    "lastFailure": "ignored",
    "lastSuccess": "ignored"
  },
  "expires": "2028-12-31T10:00:00",
  "throttling": 5,
  "status": "to be ignored - read-only",
  "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld",
  "createdAt": "ignored",
  "modifiedAt": "ignored"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. GET subscription 'http://a.b.c/subs/sub01' and see it"
echo "========================================================="
orionCurl --url '/ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub01?prettyPrint=yes&spaces=2' --noPayloadCheck -H 'Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "03. See the subscription in mongo"
echo "================================="
mongoCmd2 ftest "db.csubs.findOne()"
echo
echo


echo "04. Delete subscription with incorrect uri format"
echo "================================================="
orionCurl --url '/ngsi-ld/v1/subscriptions/abc123' -X DELETE
echo
echo


echo "05. Delete subscription that does not exist"
echo "==========================================="
orionCurl --url '/ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub04' -X DELETE
echo
echo


--REGEXPECT--
01. Create subscription 'http://a.b.c/subs/sub01'
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub01
Date: REGEX(.*)



02. GET subscription 'http://a.b.c/subs/sub01' and see it
=========================================================
HTTP/1.1 200 OK
Content-Length: 884
Content-Type: application/json
Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Test subscription 01",
  "description": "Description of Test subscription 01",
  "entities": [
    {
      "id": "urn:ngsi-ld:E01",
      "type": "T1"
    },
    {
      "id": "http://a.b.c/E02",
      "type": "T2"
    },
    {
      "idPattern": ".*E03.*",
      "type": "T3"
    }
  ],
  "watchedAttributes": [
    "P2"
  ],
  "q": "P2>10",
  "geoQ": {
    "geometry": "circle",
    "coordinates": "1,2",
    "georel": "near",
    "geoproperty": "not supported"
  },
  "csf": "not implemented",
  "isActive": false,
  "status": "paused",
  "notification": {
    "attributes": [
      "P1",
      "P2",
      "A3"
    ],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://valid.url/url",
      "accept": "application/ld+json"
    }
  },
  "expires": "2028-12-31T10:00:00Z",
  "throttling": 5
}



03. See the subscription in mongo
=================================
MongoDB shell version REGEX(.*)
connecting to: mongodb:REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : "http://a.b.c/subs/sub01",
	"expiration" : NumberLong(1861869600),
	"reference" : "http://valid.url/url",
	"custom" : false,
	"mimeType" : "application/ld+json",
	"throttling" : NumberLong(5),
	"servicePath" : "/",
	"description" : "Description of Test subscription 01",
	"status" : "paused",
	"entities" : [
		{
			"id" : "urn:ngsi-ld:E01",
			"isPattern" : "false",
			"type" : "https://uri.etsi.org/ngsi-ld/default-context/T1",
			"isTypePattern" : false
		},
		{
			"id" : "http://a.b.c/E02",
			"isPattern" : "false",
			"type" : "http://example.org/T2",
			"isTypePattern" : false
		},
		{
			"id" : ".*E03.*",
			"isPattern" : "true",
			"type" : "http://example.org/T3",
			"isTypePattern" : false
		}
	],
	"attrs" : [
		"http://example.org/P1",
		"http://example.org/P2",
		"https://uri.etsi.org/ngsi-ld/default-context/A3"
	],
	"metadata" : [ ],
	"blacklist" : false,
	"name" : "Test subscription 01",
	"ldContext" : "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld",
	"csf" : "not implemented",
	"timeInterval" : -1,
	"conditions" : [
		"http://example.org/P2"
	],
	"expression" : {
		"q" : "http://example=org/P2>10",
		"mq" : "",
		"geometry" : "circle",
		"coords" : "1,2",
		"georel" : "near",
		"geoproperty" : "not supported"
	},
	"format" : "keyValues"
}
bye


04. Delete subscription with incorrect uri format
=================================================
HTTP/1.1 400 Bad Request
Content-Length: 121
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "abc123",
    "title": "Invalid Subscription Identifier",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


05. Delete subscription that does not exist
===========================================
HTTP/1.1 404 Not Found
Content-Length: 167
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "http://a.b.c/subs/sub04",
    "title": "The requested subscription has not been found - check its id",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
