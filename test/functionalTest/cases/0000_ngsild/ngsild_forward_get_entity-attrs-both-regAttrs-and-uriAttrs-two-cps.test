# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
NGSI-LD Forward of GET /entities/{entityId}?attrs=<merge between Registered Attributes and URI Parameter attrs>

--SHELL-INIT--
export BROKER=orionld
dbInit CB
dbInit CP1
dbInit CP2
brokerStart CB
brokerStart CP1
brokerStart CP2

--SHELL--

#
# The typical Context Provider setup for the broker is to have an "attribute empty" entity pesent in the broker
# and the attributes registered out to CPs.
# This test sets up that scenario with E1 empty in CB and the attrs P1 and R1 registered to CP1, and another context provider CP2 with P2 and R2 registered.
# CP1 has an entity E1 with attrs P1, P2, R1, and R2, but only P1 and R1 are registered in the CB.
# CP2 also has an entity E1 with attrs P1, P2, R1, and R2, but only P2 and R2 are registered in the CB.
# 
# The test is to query the CB for E1?attrs=P1,R2 and get back P1 from CP1, R2 from CP2, and entity id + type from the CB.
# The response should contain only entity id+type and the attributes P1 ans R2
#
# 01. Create entity urn:ngsi-ld:entities:E1 in CB, without attributes
# 02. Create entity urn:ngsi-ld:entities:E1 in CP1, with attributes P1, P2, R1, and R1
# 03. Create entity urn:ngsi-ld:entities:E1 in CP2, with attributes P1, P2, R1, and R1
# 04. Create a registration in CB for CP1 over entity urn:ngsi-ld:entities:E1, attributes P1 and R1
# 05. Create a registration in CB for CP2 over entity urn:ngsi-ld:entities:E1, attributes P2 and R2
# 06. Ask CB to GET entity urn:ngsi-ld:entities:E1?attrs=P1,R2 - provoke forward requests to CP1 and CP2
#

echo "01. Create entity urn:ngsi-ld:entities:E1 in CB, without attributes"
echo "==================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Create entity urn:ngsi-ld:entities:E1 in CP1, with attributes P1, P2, R1, and R1"
echo "===================================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": "P1 in CP1"
  },
  "P2": {
    "type": "Property",
    "value": "P2 in CP1"
  },
  "R1": {
    "type": "Relationship",
    "object": "http://R1.in.CP1"
  },
  "R2": {
    "type": "Relationship",
    "object": "http://R2.in.CP1"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. Create entity urn:ngsi-ld:entities:E1 in CP2, with attributes P1, P2, R1, and R1"
echo "===================================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": "P1 in CP2"
  },
  "P2": {
    "type": "Property",
    "value": "P2 in CP2"
  },
  "R1": {
    "type": "Relationship",
    "object": "http://R1.in.CP2"
  },
  "R2": {
    "type": "Relationship",
    "object": "http://R2.in.CP2"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP2_PORT
echo
echo


echo "04. Create a registration in CB for CP1 over entity urn:ngsi-ld:entities:E1, attributes P1 and R1"
echo "================================================================================================="
payload='{
  "id": "urn:ngsi-ld:ContextSourceRegistration:csr01",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:ngsi-ld:entities:E1",
          "type": "Entity"
        }
      ],
      "properties": [ "P1" ],
      "relationships": [ "R1" ]
    }
  ],
  "endpoint": "http://localhost:'$CP1_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "05. Create a registration in CB for CP2 over entity urn:ngsi-ld:entities:E1, attributes P2 and R2"
echo "================================================================================================="
payload='{
  "id": "urn:ngsi-ld:ContextSourceRegistration:csr02",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:ngsi-ld:entities:E1",
          "type": "Entity"
        }
      ],
      "properties": [ "P2" ],
      "relationships": [ "R2" ]
    }
  ],
  "endpoint": "http://localhost:'$CP2_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "06. Ask CB to GET entity urn:ngsi-ld:entities:E1?attrs=P1,R2 - provoke forward requests to CP1 and CP2"
echo "======================================================================================================"
orionCurl --url "/ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1?attrs=P1,R2"
echo
echo


--REGEXPECT--
01. Create entity urn:ngsi-ld:entities:E1 in CB, without attributes
===================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



02. Create entity urn:ngsi-ld:entities:E1 in CP1, with attributes P1, P2, R1, and R1
====================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



03. Create entity urn:ngsi-ld:entities:E1 in CP2, with attributes P1, P2, R1, and R1
====================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



04. Create a registration in CB for CP1 over entity urn:ngsi-ld:entities:E1, attributes P1 and R1
=================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:ContextSourceRegistration:csr01
Date: REGEX(.*)



05. Create a registration in CB for CP2 over entity urn:ngsi-ld:entities:E1, attributes P2 and R2
=================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:ContextSourceRegistration:csr02
Date: REGEX(.*)



06. Ask CB to GET entity urn:ngsi-ld:entities:E1?attrs=P1,R2 - provoke forward requests to CP1 and CP2
======================================================================================================
HTTP/1.1 200 OK
Content-Length: 145
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "P1": {
        "type": "Property",
        "value": "P1 in CP1"
    },
    "R2": {
        "object": "http://R2.in.CP2",
        "type": "Relationship"
    },
    "id": "urn:ngsi-ld:entities:E1",
    "type": "T"
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
dbDrop CB
dbDrop CP1
dbDrop CP2
