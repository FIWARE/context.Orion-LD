# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Patching attributes for an entity

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0 IPv4 -experimental
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}
--SHELL--

#
# 00. Create a subscription for all entities of type Device
# 01. Create E1 with attrs P1, P2, and R1
# 02. See E1 in mongo
# 03. PATCH E1 with P1, P3, R1 - see P1 and R1 replacing while P3 is ignored
# 04. See E1 in mongo
# 05. GET E1
# 06. Dump accumulator - see two notification (from step 01 and 03)
#

echo "00. Create a subscription for all entities of type Device"
echo "========================================================="
payload='{
  "id": "urn:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "Device"
    }
  ],
  "notification": {
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "01. Create E1 with attrs P1, P2, and R1"
echo "======================================="
payload='{
  "id": "urn:ngsi-ld:entity:E1",
  "type": "Device",
  "createdAt": "123",
  "modifiedAt": "123",
  "P1": 1,
  "P2": 1,
  "R1": { "object": "urn:E1" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. See E1 in mongo"
echo "==================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "03. PATCH E1 with P1, P3, R1 - see P1 and R1 replacing while P3 is ignored"
echo "=========================================================================="
payload='{
  "P1": 3,
  "P3": 3,
  "R1": { "object": "urn:E3" }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1/attrs --payload "$payload" -X PATCH
echo
echo


echo "04. See E1 in mongo"
echo "==================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "06. Dump accumulator - see two notification (from step 01 and 03)"
echo "================================================================="
accumulatorDump
echo
echo


--REGEXPECT--
00. Create a subscription for all entities of type Device
=========================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:S1



01. Create E1 with attrs P1, P2, and R1
=======================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1



02. See E1 in mongo
===================
MongoDB shell REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Device",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1",
		"https://uri.etsi.org/ngsi-ld/default-context/P2",
		"https://uri.etsi.org/ngsi-ld/default-context/R1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 1,
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/default-context/P2" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 1,
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/default-context/R1" : {
			"type" : "Relationship",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "urn:E1",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. PATCH E1 with P1, P3, R1 - see P1 and R1 replacing while P3 is ignored
==========================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 92
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "notUpdated": [
        {
            "attributeName": "P3",
            "reason": "Attribute not found"
        }
    ],
    "updated": [
        "P1",
        "R1"
    ]
}


04. See E1 in mongo
===================
MongoDB shell REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Device",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1",
		"https://uri.etsi.org/ngsi-ld/default-context/P2",
		"https://uri.etsi.org/ngsi-ld/default-context/R1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 3,
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/default-context/P2" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 1,
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/default-context/R1" : {
			"type" : "Relationship",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "urn:E3",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


06. Dump accumulator - see two notification (from step 01 and 03)
=================================================================
POST http://127.0.0.1:9997/notify?subscriptionId=urn:S1
Content-Length: 331
User-Agent: orionld/REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "P1": {
                "type": "Property",
                "value": 1
            },
            "P2": {
                "type": "Property",
                "value": 1
            },
            "R1": {
                "object": "urn:E1",
                "type": "Relationship"
            },
            "id": "urn:ngsi-ld:entity:E1",
            "type": "Device"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:S1",
    "type": "Notification"
}
=======================================
POST http://127.0.0.1:9997/notify?subscriptionId=urn:S1
Content-Length: 331
User-Agent: orionld/REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Normalized

{
    "data": [
        {
            "P1": {
                "type": "Property",
                "value": 3
            },
            "P2": {
                "type": "Property",
                "value": 1
            },
            "R1": {
                "object": "urn:E3",
                "type": "Relationship"
            },
            "id": "urn:ngsi-ld:entity:E1",
            "type": "Device"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)Z",
    "subscriptionId": "urn:S1",
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
