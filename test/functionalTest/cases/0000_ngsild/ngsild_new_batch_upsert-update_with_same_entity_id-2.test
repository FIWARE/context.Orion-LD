# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Batch Upsert-Update with instances of the same entity

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. Create E1, so that the UPSERT in step 2 doesn't create E1
# 02. Upsert+Update with 2 instances of E1 (for update+update) and 2 instances of E2 (for creation+update)
# 03. GET all entities and see the merged E1 and E2
#

echo "01. Create E1, so that the UPSERT in step 2 doesn't create E1"
echo "============================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": "Step 1"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Upsert+Update with 2 instances of E1 (for update+update) and 2 instances of E2 (for creation+update)"
echo "========================================================================================================"
payload='[
  {
    "id": "urn:E1",
    "P1": {
      "type": "Property",
      "value": "Step 2.1"
    },
    "P2": "Step 2.1"
  },
  {
    "id": "urn:E1",
    "type": "T",
    "P2": "Step 2.2",
    "P3": "Step 2.2"
  },
  {
    "id": "urn:E2",
    "type": "T",
    "P1": {
      "type": "Property",
      "value": "Step 2.3"
    }
  },
  {
    "id": "urn:E2",
    "type": "T",
    "P4": {
      "type": "Property",
      "value": "Step 2.4"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert?options=update --payload "$payload"
echo
echo


echo "03. GET all entities and see the merged E1 and E2"
echo "================================================="
orionCurl --url /ngsi-ld/v1/entities?type=T
echo
echo


--REGEXPECT--
01. Create E1, so that the UPSERT in step 2 doesn't create E1
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. Upsert+Update with 2 instances of E1 (for update+update) and 2 instances of E2 (for creation+update)
========================================================================================================
HTTP/1.1 201 Created
Content-Length: 10
Content-Type: application/json
Date: REGEX(.*)

[
    "urn:E2"
]


03. GET all entities and see the merged E1 and E2
=================================================
HTTP/1.1 200 OK
Content-Length: 275
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "P1": {
            "type": "Property",
            "value": "Step 2.1"
        },
        "P2": {
            "type": "Property",
            "value": "Step 2.2"
        },
        "P3": {
            "type": "Property",
            "value": "Step 2.2"
        },
        "id": "urn:E1",
        "type": "T"
    },
    {
        "P1": {
            "type": "Property",
            "value": "Step 2.3"
        },
        "P4": {
            "type": "Property",
            "value": "Step 2.4"
        },
        "id": "urn:E2",
        "type": "T"
    }
]


--TEARDOWN--
brokerStop CB
dbDrop CB
