# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
New subscription with q/qP and sub-cache-refresh

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental -subCacheIval 2
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}

--SHELL--

#
# 01. Create a subscription S1 with q=A==0|B==0 - q-tree created by postSubscriptions
# 02. See the subscription in the database
# 03. GET the subscription - from the sub-cache
# 04. Wait 2.1 seconds, to give the broker time to refresh its sub cache
# 05. GET the subscription - from the sub-cache
# 06. Create an Entity E1 with A==1 - no notification
# 07. Create an Entity E2 with B==1 - no notification
# 08. Create an Entity E3 with A==0 - notification
# 09. Dump accumulator and see the notification for E3 only
#

echo "01. Create a subscription S1 with q=A==0|B==0 - q-tree created by postSubscriptions"
echo "==================================================================================="
payload='{
  "id": "urn:ngsi-ld:subs:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "T"
    }
  ],
  "q": "A==0|B==0",
  "notification": {
    "format": "simplified",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
echo
echo


echo "02. See the subscription in the database"
echo "========================================"
mongoCmd2 ftest "db.csubs.findOne()"
echo
echo


echo "03. GET the subscription - from the sub-cache"
echo "============================================="
orionCurl --url /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1
echo
echo


echo "04. Wait 2.1 seconds, to give the broker time to refresh its sub cache"
echo "======================================================================"
sleep 2.1s
echo Slept 2.1 seconds
echo
echo


echo "05. GET the subscription - from the sub-cache"
echo "============================================="
orionCurl --url /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1
echo
echo


echo "06. Create an Entity E1 with A==1 (qP missing is created) - no notification"
echo "==========================================================================="
payload='{
  "id": "urn:ngsi-ld:T:E1",
  "type": "T",
  "A": 1
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "07. Create an Entity E2 with B==1 - no notification"
echo "==================================================="
payload='{
  "id": "urn:ngsi-ld:T:E2",
  "type": "T",
  "B": 1
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "08. Create an Entity E3 with A==0 - notification"
echo "================================================"
payload='{
  "id": "urn:ngsi-ld:T:E3",
  "type": "T",
  "A": 0
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "09. Dump accumulator and see the notification for E3 only"
echo "========================================================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create a subscription S1 with q=A==0|B==0 - q-tree created by postSubscriptions
===================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:subs:S1



02. See the subscription in the database
========================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : "urn:ngsi-ld:subs:S1",
	"entities" : [
		{
			"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
			"id" : ".*",
			"isPattern" : "true",
			"isTypePattern" : false
		}
	],
	"ldQ" : "https://uri=etsi=org/ngsi-ld/default-context/A.value==0|https://uri=etsi=org/ngsi-ld/default-context/B.value==0",
	"createdAt" : REGEX(.*),
	"modifiedAt" : REGEX(.*),
	"throttling" : 0,
	"expression" : {
		"geometry" : "",
		"coords" : "",
		"georel" : "",
		"geoproperty" : "",
		"q" : "P;!P",
		"mq" : "P.P;!P.P"
	},
	"format" : "simplified",
	"reference" : "http://127.0.0.1:9997/notify",
	"mimeType" : "application/json",
	"attrs" : [ ],
	"conditions" : [ ],
	"status" : "active",
	"custom" : false,
	"servicePath" : "/#",
	"blacklist" : false,
	"ldContext" : "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"
}
bye


03. GET the subscription - from the sub-cache
=============================================
HTTP/1.1 200 OK
Content-Length: 273
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "entities": [
        {
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:subs:S1",
    "isActive": true,
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://127.0.0.1:9997/notify"
        },
        "format": "keyValues",
        "status": "ok"
    },
    "origin": "cache",
    "q": "A==0|B==0",
    "status": "active",
    "type": "Subscription"
}


04. Wait 2.1 seconds, to give the broker time to refresh its sub cache
======================================================================
Slept 2.1 seconds


05. GET the subscription - from the sub-cache
=============================================
HTTP/1.1 200 OK
Content-Length: 273
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "entities": [
        {
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:subs:S1",
    "isActive": true,
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://127.0.0.1:9997/notify"
        },
        "format": "keyValues",
        "status": "ok"
    },
    "origin": "cache",
    "q": "A==0|B==0",
    "status": "active",
    "type": "Subscription"
}


06. Create an Entity E1 with A==1 (qP missing is created) - no notification
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:T:E1



07. Create an Entity E2 with B==1 - no notification
===================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:T:E2



08. Create an Entity E3 with A==0 - notification
================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:T:E3



09. Dump accumulator and see the notification for E3 only
=========================================================
POST REGEX(.*)
Content-Length: 223
User-Agent: orionld/REGEX(.*)
Accept: application/json
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Ngsild-Attribute-Format: Simplified

{
    "data": [
        {
            "A": 0,
            "id": "urn:ngsi-ld:T:E3",
            "type": "T"
        }
    ],
    "id": "urn:ngsi-ld:Notification:REGEX(.*)",
    "notifiedAt": "202REGEX(.*)",
    "subscriptionId": "urn:ngsi-ld:subs:S1",
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
