# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Update and Retrieval

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 212-249

--SHELL--

#
# 01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/create
# 02. See the entity E1 in mongo
# 03. See the entity E2 in mongo
# 04. Update entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/update
# 05. See the entity E1 updated in mongo
# 06. See the entity E2 updated in mongo
#


echo "01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/create"
echo "============================================================================"
payload='[
  {
    "@context": {
      "Vehicle": "http://example.org/Vehicle"
    },
    "id": "urn:ngsi-ld:entity:E1",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 01"
    }
  },
  {
    "@context": {
      "Vehicle": "http://example.org/Vehicle"
    },
    "id": "urn:ngsi-ld:entity:E2",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 01"
    }
  }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/create?prettyPrint=yes&spaces=2" -X POST --payload "$payload" -H "Content-Type: application/ld+json" --noPayloadCheck
echo
echo


echo "02. See the entity E1 in mongo"
echo "=============================="
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E1"})'
echo
echo


echo "03. See the entity E2 in mongo"
echo "=============================="
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E2"})'
echo
echo


echo "04. Update entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/update"
echo "============================================================================"
payload='[
  {
    "@context": {
      "Vehicle": "http://example.org/Vehicle"
    },
    "id": "urn:ngsi-ld:entity:E1",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 02"
    }
  },
  {
    "@context": {
      "Vehicle": "http://example.org/Vehicle"
    },
    "id": "urn:ngsi-ld:entity:E2",
    "type": "Vehicle",
    "P1": {
      "type": "Property",
      "value": "STEP 04"
    }
  }
]'
orionCurl --url "/ngsi-ld/v1/entityOperations/update?prettyPrint=yes&spaces=2" -X POST --payload "$payload" -H "Content-Type: application/ld+json" --noPayloadCheck
echo
echo


echo "05. See the entity E1 updated in mongo"
echo "======================================"
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E1"})'
echo
echo


echo "06. See the entity E2 updated in mongo"
echo "======================================"
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:entity:E2"})'
echo
echo


--REGEXPECT--
01. Create entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/create
============================================================================
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "success": [
    "urn:ngsi-ld:entity:E1",
    "urn:ngsi-ld:entity:E2"
  ],
  "errors": []
}



02. See the entity E1 in mongo
==============================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "http://example.org/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 01",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


03. See the entity E2 in mongo
==============================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E2",
		"type" : "http://example.org/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "STEP 01",
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


04. Update entities E1 and E2 using POST /ngsi-ld/v1/entityOperations/update
============================================================================
HTTP/1.1 200 OK
Content-Length: 96
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "success": [
    "urn:ngsi-ld:entity:E1",
    "urn:ngsi-ld:entity:E2"
  ],
  "errors": []
}



05. See the entity E1 updated in mongo
======================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "http://example.org/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"value" : "STEP 02",
			"type" : "Property",
			"mdNames" : [ ],
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*)
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


06. See the entity E2 updated in mongo
======================================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E2",
		"type" : "http://example.org/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"value" : "STEP 04",
			"type" : "Property",
			"mdNames" : [ ],
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*)
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


--TEARDOWN--
brokerStop CB
dbDrop CB
