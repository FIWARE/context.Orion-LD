# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Patch using Smart Input Format

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. Create an entity 'urn:E1' with a Relationship 'occupier' whose object is an array of one item
# 02. GET 'urn:E1'
# 03. PATCH entity 'urn:E1', making 'occupier' have an array of two
# 04. GET the entity and see that occupier::object is an array of two items
#


echo "01. Create an entity 'urn:E1' with a Relationship 'occupier' whose object is an array of one item"
echo "================================================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "occupier": {
    "object": [
      "urn:ngsi-ld:Person:You"
    ]
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. GET 'urn:E1'"
echo "================"
orionCurl --url /ngsi-ld/v1/entities/urn:E1
echo
echo


echo "03. PATCH entity 'urn:E1', making 'occupier' have an array of two"
echo "================================================================="
payload='{
  "occupier": {
    "object": [
      "urn:ngsi-ld:Person:He",
      "urn:ngsi-ld:Person:She"
    ]
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 -X PATCH --payload "$payload"
echo
echo


echo "04. GET the entity and see that occupier::object is an array of two items"
echo "========================================================================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1
echo
echo


--REGEXPECT--
01. Create an entity 'urn:E1' with a Relationship 'occupier' whose object is an array of one item
=================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. GET 'urn:E1'
================
HTTP/1.1 200 OK
Content-Length: 97
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "id": "urn:E1",
    "occupier": {
        "object": [
            "urn:ngsi-ld:Person:You"
        ],
        "type": "Relationship"
    },
    "type": "T"
}


03. PATCH entity 'urn:E1', making 'occupier' have an array of two
=================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



04. GET the entity and see that occupier::object is an array of two items
=========================================================================
HTTP/1.1 200 OK
Content-Length: 121
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "id": "urn:E1",
    "occupier": {
        "object": [
            "urn:ngsi-ld:Person:He",
            "urn:ngsi-ld:Person:She"
        ],
        "type": "Relationship"
    },
    "type": "T"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
