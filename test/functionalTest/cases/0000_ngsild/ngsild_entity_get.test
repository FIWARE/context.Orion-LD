# Copyright 2018 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Creation and Retrieval

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 212-249

--SHELL--

#
# 01. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E1, with default context
# 02. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E2, with test context
# 03. GET E1, see default context, pretty-print with 4 spaces
# 04. GET E2, see test context, pretty-print with default number of spaces (2)
# 05. GET E2, but without prettyPrint
# 06. Attempt to GET non-existing E3, see 404 not Found
#


echo "01. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E1, with default context"
echo "==========================================================================="
payload='{
  "id": "http://a.b.c/entity/E1",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 6"
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload"
echo
echo


echo "02. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E2, with test context"
echo "========================================================================"
payload='{
  "id": "http://a.b.c/entity/E2",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 6"
  },
  "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld"
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "03. GET E1, see default context, pretty-print with 4 spaces"
echo "==========================================================="
orionCurl --url '/ngsi-ld/v1/entities/http://a.b.c/entity/E1?prettyPrint=yes&spaces=4' --noPayloadCheck -H "Accept: application/ld+json" -H 'Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "04. GET E2, see test context, pretty-print with default number of spaces (2)"
echo "============================================================================"
orionCurl --url '/ngsi-ld/v1/entities/http://a.b.c/entity/E2?prettyPrint=yes' --noPayloadCheck -H "Accept: application/ld+json" -H 'Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "05. GET E2, but without prettyPrint"
echo "==================================="
orionCurl --url /ngsi-ld/v1/entities/http://a.b.c/entity/E2 --noPayloadCheck -H "Accept: application/ld+json" -H 'Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "06. Attempt to GET non-existing E3, see 404 not Found"
echo "====================================================="
orionCurl --url '/ngsi-ld/v1/entities/http://a.b.c/entity/E3?prettyPrint=yes' --noPayloadCheck -H 'Link: <https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


--REGEXPECT--
01. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E1, with default context
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/http://a.b.c/entity/E1
Date: REGEX(.*)



02. POST /ngsi-ld/v1/entities::http://a.b.c/entity/E2, with test context
========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/http://a.b.c/entity/E2
Date: REGEX(.*)



03. GET E1, see default context, pretty-print with 4 spaces
===========================================================
HTTP/1.1 200 OK
Content-Length: 222
Content-Type: application/ld+json
Date: REGEX(.*)

{
    "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld",
    "id": "http://a.b.c/entity/E1",
    "type": "A",
    "name": {
        "type": "Property",
        "value": "John 6"
    }
}



04. GET E2, see test context, pretty-print with default number of spaces (2)
============================================================================
HTTP/1.1 200 OK
Content-Length: 204
Content-Type: application/ld+json
Date: REGEX(.*)

{
  "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld",
  "id": "http://a.b.c/entity/E2",
  "type": "A",
  "name": {
    "type": "Property",
    "value": "John 6"
  }
}



05. GET E2, but without prettyPrint
===================================
HTTP/1.1 200 OK
Content-Length: 171
Content-Type: application/ld+json
Date: REGEX(.*)

{"@context":"https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testContext.jsonld","id":"http://a.b.c/entity/E2","type":"A","name":{"type":"Property","value":"John 6"}}


06. Attempt to GET non-existing E3, see 404 not Found
=====================================================
HTTP/1.1 404 Not Found
Content-Length: 138
Content-Type: application/json
Date: REGEX(.*)

{
  "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound",
  "title": "Entity Not Found",
  "detail": "http://a.b.c/entity/E3"
}



--TEARDOWN--
brokerStop CB
dbDrop CB
