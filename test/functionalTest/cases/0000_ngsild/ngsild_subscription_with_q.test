# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription with Q-filter

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create subscription with Q-filter for temperature>20
# 03. Create an entity with temperature = 23 - should provoke a notification
# 04. Dump accumulator and see one notification
#


echo "01. Create subscription with Q-filter for temperature>20"
echo "========================================================"
payload='{
  "id": "urn:ngsi-ld:Subscription:test12",
  "type": "Subscription",
  "entities": [
    {
      "id": "urn:ngsi-ld:Test:12",
      "type": "AirQualityObserved"
    }
  ],
  "watchedAttributes": ["temperature"],
  "q": "temperature>20",
  "notification": {
    "attributes": [ "temperature" ],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/notify",
      "accept": "application/json"
    }
  },
  "@context": ["https://fiware.github.io/data-models/context.jsonld", "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"]
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "03. Create an entity with temperature = 23 - should provoke a notification"
echo "=========================================================================="
payload='{
  "id": "urn:ngsi-ld:Test:12",
  "type": "AirQualityObserved",
  "temperature": {
    "type": "Property",
    "value": 21
  },
  "@context": ["https://fiware.github.io/data-models/context.jsonld", "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld"]
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "04. Dump accumulator and see one notification"
echo "============================================="
accumulatorDump
echo
echo


--REGEXPECT--
01. Create subscription with Q-filter for temperature>20
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:test12
Date: REGEX(.*)



03. Create an entity with temperature = 23 - should provoke a notification
==========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Test:12
Date: REGEX(.*)



04. Dump accumulator and see one notification
=============================================
POST http://REGEX(.*)/notify
Fiware-Servicepath: /
Content-Length: 254
User-Agent: REGEX(.*)
Ngsiv2-Attrsformat: keyValues
Host: localhost:REGEX(.*)
Accept: application/json
Link: REGEX(.*)
Content-Type: application/json; charset=utf-8

{
    "data": [
        {
            "id": "urn:ngsi-ld:Test:12", 
            "temperature": 21, 
            "type": "AirQualityObserved"
        }
    ], 
    "id": "urn:ngsi-ld:Notification:REGEX(.*)", 
    "notifiedAt": "REGEX(.*)", 
    "subscriptionId": "urn:ngsi-ld:Subscription:test12", 
    "type": "Notification"
}
=======================================


--TEARDOWN--
brokerStop CB
dbDrop CB
accumulatorStop
