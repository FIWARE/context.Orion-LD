# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Creation and Retrieval

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 212-249

--SHELL--

#
# 01. Attempt to upsert with an entity having a ID that is not a string - see error
# 02. Attempt to upsert with an entity without ID field - see error
# 03. Attempt to upsert with an entity having a ID with URI invalid - see error
# 04. Attempt to upsert with an entity having a TYPE that is not a string - see error
# 05. Attempt to upsert with an entity without TYPE field - see error
# 06. Attempt to upsert with an entity with 2 ID fields - see error
# 07. Attempt to upsert with an entity with 2 TYPE fields - see error
# 08. Attempt to upsert with an entity with ID typed wrong - see error
# 09. Attempt to upsert with an entity with TYPE typed wrong - see error
# 10. Attempt to upsert with an empty array - see error
# 11. POST /ngsi-ld/v1/entityOperations/upsert - 4 entities
# 12. POST /ngsi-ld/v1/entityOperations/upsert - 4 same entities from 11. functional test
#


echo "01. Attempt to upsert with an entity having a ID that is not a string - see error"
echo "================================================================================="
payload='[
  {
    "id": 123456,
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. Attempt to upsert with an entity without ID field - see error"
echo "================================================================="
payload='[
  {
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "03. Attempt to upsert with an entity having a ID with URI invalid - see error"
echo "============================================================================="
payload='[
  {
    "id": "ABC_123456",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "04. Attempt to upsert with an entity having a TYPE that is not a string - see error"
echo "==================================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:Vehicle:301",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": 14,
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "05. Attempt to upsert with an entity without TYPE field - see error"
echo "==================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:Vehicle:301",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": 14,
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "06. Attempt to upsert with an entity with 2 ID fields - see error"
echo "================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:Vehicle:301",
    "id": "urn:ngsi-ld:Vehicle:301",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Motocycle:402",
    "type": "Motocycle",
    "brandName": {
      "type": "Property",
      "value": "Honda"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "07. Attempt to upsert with an entity with 2 TYPE fields - see error"
echo "==================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:Vehicle:301",
    "type": "Vehicle",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Bicycle:502",
    "type": "Bicycle",
    "brandName": {
      "type": "Property",
      "value": "Caloi"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "08. Attempt to upsert with an entity with ID typed wrong - see error"
echo "===================================================================="
payload='[
  {
    "idwrong": "urn:ngsi-ld:Vehicle:301",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "09. Attempt to upsert with an entity with TYPE typed wrong - see error"
echo "======================================================================"
payload='[
  {
    "id": "urn:ngsi-ld:Vehicle:301",
    "typewrong": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    },
    "isParked": {
      "type": "Relationship",
      "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
      "observedAt": "2017-07-29T12:00:04Z",
      "providedBy": {
        "type": "Relationship",
        "object": "urn:ngsi-ld:Person:Bob"
      }
    }
  },
  {
    "id": "urn:ngsi-ld:Vehicle:302",
    "type": "Vehicle",
    "brandName": {
      "type": "Property",
      "value": "Mercedes"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "10. Attempt to upsert with an empty array - see error"
echo "====================================================="
payload='[]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "11. POST /ngsi-ld/v1/entityOperations/upsert - 4 entities"
echo "========================================================="
payload='[
    {
        "id": "urn:ngsi-ld:Vehicle:00001",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00002",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00003",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00004",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "12. POST /ngsi-ld/v1/entityOperations/upsert - 4 same entities from 11. functional test"
echo "======================================================================================="
payload='[
    {
        "id": "urn:ngsi-ld:Vehicle:00001",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00002",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00003",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    },
    {
        "id": "urn:ngsi-ld:Vehicle:00004",
        "type": "Vehicle",
        "brandName": {
            "type": "Property",
            "value": "Mercedes"
        },
        "isParked": {
            "type": "Relationship",
            "object": "urn:ngsi-ld:OffStreetParking:Downtown1",
            "observedAt": "2017-07-29T12:00:04Z",
            "providedBy": {
                "type": "Relationship",
                "object": "urn:ngsi-ld:Person:Bob"
            }
        }
    }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/upsert -X POST --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo

--REGEXPECT--
01. Attempt to upsert with an entity having a ID that is not a string - see error
=================================================================================
HTTP/1.1 200 OK
Content-Length: 125
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "Invalid Entity-ID",
            "error": "Entity ID must be a JSON string"
        }
    ],
    "success": [
        "urn:ngsi-ld:Vehicle:302"
    ]
}


02. Attempt to upsert with an entity without ID field - see error
=================================================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "NO Entity-ID",
            "error": "Entity ID is mandatory"
        }
    ]
}


03. Attempt to upsert with an entity having a ID with URI invalid - see error
=============================================================================
HTTP/1.1 200 OK
Content-Length: 78
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "ABC_123456",
            "error": "Entity ID must be a valid URI"
        }
    ]
}


04. Attempt to upsert with an entity having a TYPE that is not a string - see error
===================================================================================
HTTP/1.1 200 OK
Content-Length: 133
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:Vehicle:302",
            "error": "Entity TYPE must be a JSON string"
        }
    ],
    "success": [
        "urn:ngsi-ld:Vehicle:301"
    ]
}


05. Attempt to upsert with an entity without TYPE field - see error
===================================================================
HTTP/1.1 200 OK
Content-Length: 176
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:Vehicle:301",
            "error": "Entity TYPE missing - mandatory"
        },
        {
            "entityId": "urn:ngsi-ld:Vehicle:302",
            "error": "Entity TYPE must be a JSON string"
        }
    ]
}


06. Attempt to upsert with an entity with 2 ID fields - see error
=================================================================
HTTP/1.1 200 OK
Content-Length: 134
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:Vehicle:301",
            "error": "Entity ID must be a unique field"
        }
    ],
    "success": [
        "urn:ngsi-ld:Motocycle:402"
    ]
}


07. Attempt to upsert with an entity with 2 TYPE fields - see error
===================================================================
HTTP/1.1 200 OK
Content-Length: 134
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:Vehicle:301",
            "error": "Entity TYPE must be a unique field"
        }
    ],
    "success": [
        "urn:ngsi-ld:Bicycle:502"
    ]
}


08. Attempt to upsert with an entity with ID typed wrong - see error
====================================================================
HTTP/1.1 200 OK
Content-Length: 73
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "NO Entity-ID",
            "error": "Entity ID is mandatory"
        }
    ]
}


09. Attempt to upsert with an entity with TYPE typed wrong - see error
======================================================================
HTTP/1.1 200 OK
Content-Length: 93
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:Vehicle:301",
            "error": "Entity TYPE missing - mandatory"
        }
    ]
}


10. Attempt to upsert with an empty array - see error
=====================================================
HTTP/1.1 400 Bad Request
Content-Length: 97
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "[]",
    "title": "Empty Array",
    "type": "https://uri.etsi.org/ngsi-ld/errors/InvalidRequest"
}


11. POST /ngsi-ld/v1/entityOperations/upsert - 4 entities
=========================================================
HTTP/1.1 200 OK
Content-Length: 125
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "success": [
        "urn:ngsi-ld:Vehicle:00001",
        "urn:ngsi-ld:Vehicle:00002",
        "urn:ngsi-ld:Vehicle:00003",
        "urn:ngsi-ld:Vehicle:00004"
    ]
}


12. POST /ngsi-ld/v1/entityOperations/upsert - 4 same entities from 11. functional test
=======================================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{}


--TEARDOWN--
brokerStop CB
dbDrop CB
