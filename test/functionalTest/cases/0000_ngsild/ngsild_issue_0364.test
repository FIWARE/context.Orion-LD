# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Expansion of values

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255

--SHELL--

#
# 01. Create an entity E1 with an attribute 'category', whose value is to be expanded/compacted according to the context chosen
# 02. See the entity in the database. see the values of 'category' EXPANDED
# 03. GET the entity E1, with the same context - see the value of 'category' compacted
# 04. GET the entity E1, with the same context AND with options=keyValues - see the value of 'category' compacted
# 05. Create another entity E2, where 'category' is an array of strings
# 06. See the entity in mongo - see the values expanded
# 07. GET the entity E2 - see the values compacted
#

echo "01. Create an entity E1 with an attribute 'category', whose value is to be expanded/compacted according to the context chosen"
echo "============================================================================================================================="
payload='{
  "id": "urn:ngsi-ld:Building:E1",
  "type": "Building",
  "category": {
    "type": "Property",
    "value": "commercial"
  },
  "address": {
    "type": "Property", 
    "value": {
      "streetAddress":"Panoramastrasse 1A",
      "addressRegion":"Berlin",
      "addressLocality":"Mitte",
      "postalCode":"10178"
    },
    "verified": {"type": "Property", "value": false}
  },
  "location": {
    "type": "GeoProperty",
    "value": {"type": "Point", "coordinates": [13.4094,52.5208]}
  },
  "name": {"type": "Property", "value": "Tower Trodelmarkt"},
  "furniture": {
    "type": "Relationship", "object": [ "urn:ngsi-ld:Shelf:unit009"]
  },
  "@context": "https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. See the entity in the database. see the values of 'category' EXPANDED"
echo "========================================================================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


echo "03. GET the entity E1, with the same context - see the value of 'category' compacted"
echo "===================================================================================="
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:Building:E1?prettyPrint=yes&spaces=2' --noPayloadCheck -H 'Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "04. GET the entity E1, with the same context AND with options=keyValues - see the value of 'category' compacted"
echo "==============================================================================================================="
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:Building:E1?prettyPrint=yes&spaces=2&options=keyValues' --noPayloadCheck -H 'Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


echo "05. Create another entity E2, where 'category' is an array of strings"
echo "====================================================================="
payload='{
  "id": "urn:ngsi-ld:Building:E2",
  "type": "Building",
  "category": {
    "type": "Property",
    "value": ["commercial", "office", "industrial", "retail" ]
  },
  "@context": "https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "06. See the entity in mongo - see the values expanded"
echo "====================================================="
mongoCmd2 ftest 'db.entities.findOne({"_id.id": "urn:ngsi-ld:Building:E2"})'
echo
echo


echo "07. GET the entity E2 - see the values compacted"
echo "================================================"
orionCurl --url '/ngsi-ld/v1/entities/urn:ngsi-ld:Building:E2?prettyPrint=yes&spaces=2&options=keyValues' --noPayloadCheck -H 'Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"'
echo
echo


--REGEXPECT--
01. Create an entity E1 with an attribute 'category', whose value is to be expanded/compacted according to the context chosen
=============================================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Building:E1
Date: REGEX(.*)



02. See the entity in the database. see the values of 'category' EXPANDED
=========================================================================
MongoDB shell REGEX(.*)
connecting to: REGEX(.*)
MongoDB server REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:Building:E1",
		"type" : "https://uri.fiware.org/ns/data-models#Building",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.fiware.org/ns/data-models#category",
		"https://schema.org/address",
		"location",
		"https://uri.etsi.org/ngsi-ld/name",
		"https://fiware.github.io/tutorials.Step-by-Step/schema/furniture"
	],
	"attrs" : {
		"https://uri=fiware=org/ns/data-models#category" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "https://uri.fiware.org/ns/data-models#commercial",
			"mdNames" : [ ]
		},
		"https://schema=org/address" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : {
				"streetAddress" : "Panoramastrasse 1A",
				"addressRegion" : "Berlin",
				"addressLocality" : "Mitte",
				"postalCode" : "10178"
			},
			"md" : {
				"https://fiware=github=io/tutorials=Step-by-Step/schema/verified" : {
					"type" : "Property",
					"value" : false
				}
			},
			"mdNames" : [
				"https://fiware.github.io/tutorials.Step-by-Step/schema/verified"
			]
		},
		"location" : {
			"type" : "GeoProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : {
				"type" : "Point",
				"coordinates" : [
					13.4094,
					52.5208
				]
			},
			"mdNames" : [ ]
		},
		"https://uri=etsi=org/ngsi-ld/name" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : "Tower Trodelmarkt",
			"mdNames" : [ ]
		},
		"https://fiware=github=io/tutorials=Step-by-Step/schema/furniture" : {
			"type" : "Relationship",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : [
				"urn:ngsi-ld:Shelf:unit009"
			],
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"location" : {
		"attrName" : "location",
		"coords" : {
			"type" : "Point",
			"coordinates" : [
				13.4094,
				52.5208
			]
		}
	},
	"lastCorrelator" : ""
}
bye


03. GET the entity E1, with the same context - see the value of 'category' compacted
====================================================================================
HTTP/1.1 200 OK
Content-Length: 744
Content-Type: application/json
Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "id": "urn:ngsi-ld:Building:E1",
  "type": "Building",
  "furniture": {
    "type": "Relationship",
    "object": [
      "urn:ngsi-ld:Shelf:unit009"
    ]
  },
  "address": {
    "type": "Property",
    "value": {
      "streetAddress": "Panoramastrasse 1A",
      "addressRegion": "Berlin",
      "addressLocality": "Mitte",
      "postalCode": "10178"
    },
    "verified": {
      "type": "Property",
      "value": false
    }
  },
  "name": {
    "type": "Property",
    "value": "Tower Trodelmarkt"
  },
  "category": {
    "type": "Property",
    "value": "commercial"
  },
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [
        13.4094,
        52.5208
      ]
    }
  }
}



04. GET the entity E1, with the same context AND with options=keyValues - see the value of 'category' compacted
===============================================================================================================
HTTP/1.1 200 OK
Content-Length: 423
Content-Type: application/json
Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "id": "urn:ngsi-ld:Building:E1",
  "type": "Building",
  "furniture": [
    "urn:ngsi-ld:Shelf:unit009"
  ],
  "address": {
    "streetAddress": "Panoramastrasse 1A",
    "addressRegion": "Berlin",
    "addressLocality": "Mitte",
    "postalCode": "10178"
  },
  "name": "Tower Trodelmarkt",
  "category": "commercial",
  "location": {
    "type": "Point",
    "coordinates": [
      13.4094,
      52.5208
    ]
  }
}



05. Create another entity E2, where 'category' is an array of strings
=====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Building:E2
Date: REGEX(.*)



06. See the entity in mongo - see the values expanded
=====================================================
MongoDB shell REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:Building:E2",
		"type" : "https://uri.fiware.org/ns/data-models#Building",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.fiware.org/ns/data-models#category"
	],
	"attrs" : {
		"https://uri=fiware=org/ns/data-models#category" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : [
				"https://uri.fiware.org/ns/data-models#commercial",
				"https://uri.fiware.org/ns/data-models#office",
				"https://uri.fiware.org/ns/data-models#industrial",
				"https://uri.fiware.org/ns/data-models#retail"
			],
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


07. GET the entity E2 - see the values compacted
================================================
HTTP/1.1 200 OK
Content-Length: 144
Content-Type: application/json
Link: <https://fiware.github.io/tutorials.Step-by-Step/tutorials-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
  "id": "urn:ngsi-ld:Building:E2",
  "type": "Building",
  "category": [
    "commercial",
    "office",
    "industrial",
    "retail"
  ]
}



--TEARDOWN--
brokerStop CB
dbDrop CB
