# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Tenant test

--SHELL-INIT--
export BROKER=orionld
dbInit CB
dbInit CB tn1
brokerStart CB 0-255 IPv4 -multiservice

--SHELL--

#
# 01. Create an entity urn:ngsi-ld:entity:E1 in default tenant
# 02. Create an entity urn:ngsi-ld:entity:E2 in tenant tn1
# 03. Get all entities from default tenant - see only E1
# 04. Get all entities from tenant tn1 - see only E2
# 05. Create a subscription urn:ngsi-ld:Subscription:S1 in default tenant
# 06. Create a subscription urn:ngsi-ld:Subscription:S2 in tenant tn1
# 07. Get all subscriptions from default tenant using mongo - see only S1
# 08. Get all subscriptions from tenant tn1 using mongo - see only S2
#

echo "01. Create an entity urn:ngsi-ld:entity:E1 in default tenant"
echo "============================================================"
payload='{
  "id": "urn:ngsi-ld:entity:E1",
  "type": "T1"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. Create an entity urn:ngsi-ld:entity:E2 in tenant tn1"
echo "========================================================"
payload='{
  "id": "urn:ngsi-ld:entity:E2",
  "type": "T1"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --tenant tn1
echo
echo


echo "03. Get all entities from default tenant - see only E1"
echo "======================================================"
orionCurl --url /ngsi-ld/v1/entities?type=T1
echo
echo


echo "04. Get all entities from tenant tn1 - see only E2"
echo "=================================================="
orionCurl --url /ngsi-ld/v1/entities?type=T1 --tenant tn1
echo
echo


echo "05. Create a subscription urn:ngsi-ld:Subscription:S1 in default tenant"
echo "======================================================================="
payload='{
  "id": "urn:ngsi-ld:Subscription:S1",
  "type": "Subscription",
  "entities": [
    {
      "type": "vehicle"
    }
  ],
  "notification": {
    "format": "keyValues",
    "endpoint": {
      "uri": "http://mycallback:8080/callback"
    }
  },
  "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testFullContext.jsonld"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "06. Create a subscription urn:ngsi-ld:Subscription:S2 in tenant tn1"
echo "==================================================================="
payload='{
  "id": "urn:ngsi-ld:Subscription:S2",
  "type": "Subscription",
  "entities": [
    {
      "type": "vehicle"
    }
  ],
  "notification": {
    "format": "keyValues",
    "endpoint": {
      "uri": "http://mycallback:8080/callback"
    }
  },
  "@context": "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testFullContext.jsonld"
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json" --tenant tn1
echo
echo


echo "07. Get all subscriptions from default tenant using mongo - see only S1"
echo "======================================================================="
mongoCmd2 ftest "db.csubs.count()"
echo
echo "=========="
echo
mongoCmd2 ftest "db.csubs.findOne()"
echo
echo


echo "08. Get all subscriptions from tenant tn1 using mongo - see only S2"
echo "==================================================================="
mongoCmd2 ftest-tn1 "db.csubs.count()"
echo
echo "=========="
echo
mongoCmd2 ftest-tn1 "db.csubs.findOne()"
echo
echo


--REGEXPECT--
01. Create an entity urn:ngsi-ld:entity:E1 in default tenant
============================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1
Date: REGEX(.*)



02. Create an entity urn:ngsi-ld:entity:E2 in tenant tn1
========================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E2
Date: REGEX(.*)



03. Get all entities from default tenant - see only E1
======================================================
HTTP/1.1 200 OK
Content-Length: 44
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

[
    {
        "id": "urn:ngsi-ld:entity:E1",
        "type": "T1"
    }
]


04. Get all entities from tenant tn1 - see only E2
==================================================
HTTP/1.1 200 OK
Content-Length: 44
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

[
    {
        "id": "urn:ngsi-ld:entity:E2",
        "type": "T1"
    }
]


05. Create a subscription urn:ngsi-ld:Subscription:S1 in default tenant
=======================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:S1
Date: REGEX(.*)



06. Create a subscription urn:ngsi-ld:Subscription:S2 in tenant tn1
===================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:S2
Date: REGEX(.*)



07. Get all subscriptions from default tenant using mongo - see only S1
=======================================================================
MongoDB shell version REGEX(.*)
connecting to: mongodb://localhost:27017/ftest
MongoDB server version: REGEX(.*)
1
bye

==========

MongoDB shell version REGEX(.*)
connecting to: mongodb://localhost:27017/ftest
MongoDB server version: REGEX(.*)
{
	"_id" : "urn:ngsi-ld:Subscription:S1",
	"expiration" : NumberLong(REGEX(.*)),
	"reference" : "http://mycallback:8080/callback",
	"custom" : false,
	"mimeType" : "application/json",
	"throttling" : NumberLong(0),
	"servicePath" : "/",
	"status" : "active",
	"entities" : [
		{
			"id" : "",
			"isPattern" : "",
			"type" : "https://uri.etsi.org/ngsi-ld/default-context/vehicle",
			"isTypePattern" : false
		}
	],
	"attrs" : [ ],
	"metadata" : [ ],
	"blacklist" : false,
	"ldContext" : "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testFullContext.jsonld",
	"conditions" : [ ],
	"expression" : {
		"q" : "",
		"mq" : "",
		"geometry" : "",
		"coords" : "",
		"georel" : ""
	},
	"format" : "keyValues"
}
bye


08. Get all subscriptions from tenant tn1 using mongo - see only S2
===================================================================
MongoDB shell version REGEX(.*)
connecting to: mongodb://localhost:27017/ftest-tn1
MongoDB server version: REGEX(.*)
1
bye

==========

MongoDB shell version REGEX(.*)
connecting to: mongodb://localhost:27017/ftest-tn1
MongoDB server version: REGEX(.*)
{
	"_id" : "urn:ngsi-ld:Subscription:S2",
	"expiration" : NumberLong(REGEX(.*)),
	"reference" : "http://mycallback:8080/callback",
	"custom" : false,
	"mimeType" : "application/json",
	"throttling" : NumberLong(0),
	"servicePath" : "/",
	"status" : "active",
	"entities" : [
		{
			"id" : "",
			"isPattern" : "",
			"type" : "https://uri.etsi.org/ngsi-ld/default-context/vehicle",
			"isTypePattern" : false
		}
	],
	"attrs" : [ ],
	"metadata" : [ ],
	"blacklist" : false,
	"ldContext" : "https://fiware.github.io/NGSI-LD_TestSuite/ldContext/testFullContext.jsonld",
	"conditions" : [ ],
	"expression" : {
		"q" : "",
		"mq" : "",
		"geometry" : "",
		"coords" : "",
		"georel" : ""
	},
	"format" : "keyValues"
}
bye


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
dbDrop CB tn1
