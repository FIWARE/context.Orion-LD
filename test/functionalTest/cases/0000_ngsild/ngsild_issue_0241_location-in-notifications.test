# Copyright 2019 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Notifications - correct representation of location inside notifications

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print

--SHELL--

#
# 01. Create a subscription
# 02. Create a matching Entity urn:ngsi-ld:Vehicle:A4501, with a 'location' property
# 03. Dump the accumulator to see the notification, make sure the 'location' property is OK
# 04. See the entity in mongo
#

echo "01. Create a subscription"
echo "========================="
payload='{
  "id": "urn:ngsi-ld:Subscription:01",
  "type": "Subscription",
  "entities": [
    {
      "type": "Vehicle"
    }
  ],
  "@context": "http://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld",
  "description": "Notify me of all product vehicles changes",
  "notification": {
    "format": "normalized",
    "endpoint": {
      "uri": "http://localhost:'$LISTENER_PORT'/notify",
      "accept": "application/ld+json"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. Create a matching Entity urn:ngsi-ld:Vehicle:A4501, with a 'location' property"
echo "=================================================================================="
payload='{
  "id": "urn:ngsi-ld:Vehicle:A4501",
  "type": "Vehicle",
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "Point",
      "coordinates": [
        -8.5,
        41.2
      ]
    }
  },
  "@context": [ "http://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld" ]
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "03. Dump the accumulator to see the notification, make sure the 'location' property is OK"
echo "========================================================================================="
sleep 1
accumulatorDump
accumulatorReset
echo
echo


echo "04. See the entity in mongo"
echo "==========================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


--REGEXPECT--
01. Create a subscription
=========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:01
Date: REGEX(.*)



02. Create a matching Entity urn:ngsi-ld:Vehicle:A4501, with a 'location' property
==================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:Vehicle:A4501
Date: REGEX(.*)



03. Dump the accumulator to see the notification, make sure the 'location' property is OK
=========================================================================================
POST http://REGEX(.*)/notify
Fiware-Servicepath: /
Content-Length: 381
User-Agent: orion/REGEX(.*)
Ngsiv2-Attrsformat: normalized
Host: REGEX(.*)
Accept: application/json
Content-Type: application/ld+json

{
    "@context": "http://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld", 
    "data": [
        {
            "id": "urn:ngsi-ld:Vehicle:A4501", 
            "location": {
                "type": "GeoProperty", 
                "value": {
                    "coordinates": [
                        -8.5, 
                        41.2
                    ], 
                    "type": "Point"
                }
            }, 
            "type": "Vehicle"
        }
    ], 
    "id": "urn:ngsi-ld:Notification:REGEX(.*)", 
    "notifiedAt": "REGEX(.*)", 
    "subscriptionId": "urn:ngsi-ld:Subscription:01", 
    "type": "Notification"
}
=======================================


04. See the entity in mongo
===========================
MongoDB shell version REGEX(.*)
connecting to: mongodb:REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:Vehicle:A4501",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/Vehicle",
		"servicePath" : "/"
	},
	"attrNames" : [
		"location"
	],
	"attrs" : {
		"location" : {
			"type" : "GeoProperty",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : {
				"type" : "Point",
				"coordinates" : [
					-8.5,
					41.2
				]
			},
			"mdNames" : [ ]
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


--TEARDOWN--
brokerStop CB
dbDrop CB
