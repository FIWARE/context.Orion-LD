# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription Creation without optional fields - check for errors in log file

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. Create a subscription without optional fields
# 02. Create a registration without optional fields
# 03. Create an entity without optional fields
# 04. GET subscriptions
# 05. GET registrations
# 06. GET entities
# 07. GET the subscription
# 08. GET the registration
# 09. GET the entity
# 10. grep logfile for error - see nothing
#


echo "01. Create a subscription without optional fields"
echo "================================================="
payload='{
  "type": "Subscription",
  "entities": [
    {
      "type": "FillingSensor"
    }
  ],
  "notification": {
    "endpoint": {
      "uri": "http://quantumleap:8668/v2/notify"
    }
  }
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload"
subLocation=$(grep Location /tmp/httpHeaders.out | awk -FLocation: '{print $2}')
echo
echo


echo "02. Create a registration without optional fields"
echo "================================================="
payload='{
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "type": "Vehicle"
        }
      ]
    }
  ],
  "endpoint": "http://my.csource.org:1026"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
regLocation=$(grep Location /tmp/httpHeaders.out | awk -FLocation: '{print $2}')
echo
echo


echo "03. Create an entity without optional fields"
echo "============================================"
payload='{
  "id": "urn:E1",
  "type": "T"
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "04. GET subscriptions"
echo "====================="
orionCurl --url /ngsi-ld/v1/subscriptions
echo
echo


echo "05. GET registrations"
echo "====================="
orionCurl --url /ngsi-ld/v1/csourceRegistrations
echo
echo


echo "06. GET entities"
echo "================"
orionCurl --url /ngsi-ld/v1/entities?local=true
echo
echo


echo "07. GET the subscription"
echo "========================"
orionCurl --url $subLocation
echo
echo


echo "08. GET the registration"
echo "========================"
orionCurl --url $regLocation
echo
echo


echo "09. GET the entity"
echo "=================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1?local=true
echo
echo


echo "10. grep logfile for error - see nothing"
echo "========================================"
egrep 'ERR|WARN' /tmp/orionld.log
echo
echo


--REGEXPECT--
01. Create a subscription without optional fields
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/subscriptions/REGEX(.*)



02. Create a registration without optional fields
=================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/REGEX(.*)



03. Create an entity without optional fields
============================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/REGEX(.*)



04. GET subscriptions
=====================
HTTP/1.1 200 OK
Content-Length: 319
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[
    {
        "entities": [
            {
                "type": "FillingSensor"
            }
        ],
        "id": "urn:ngsi-ld:subscription:REGEX(.*)",
        "isActive": true,
        "notification": {
            "endpoint": {
                "accept": "application/json",
                "uri": "http://quantumleap:8668/v2/notify"
            },
            "format": "normalized",
            "status": "ok"
        },
        "origin": "cache",
        "status": "active",
        "type": "Subscription"
    }
]


05. GET registrations
=====================
HTTP/1.1 200 OK
Content-Length: 245
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[
    {
        "endpoint": "http://my.csource.org:1026",
        "id": "urn:ngsi-ld:ContextSourceRegistration:REGEX(.*)",
        "information": [
            {
                "entities": [
                    {
                        "type": "Vehicle"
                    }
                ]
            }
        ],
        "origin": "cache",
        "status": "active",
        "type": "ContextSourceRegistration"
    }
]


06. GET entities
================
HTTP/1.1 200 OK
Content-Length: 28
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[
    {
        "id": "urn:E1",
        "type": "T"
    }
]


07. GET the subscription
========================
HTTP/1.1 200 OK
Content-Length: 317
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "entities": [
        {
            "type": "FillingSensor"
        }
    ],
    "id": "urn:ngsi-ld:subscription:REGEX(.*)",
    "isActive": true,
    "notification": {
        "endpoint": {
            "accept": "application/json",
            "uri": "http://quantumleap:8668/v2/notify"
        },
        "format": "normalized",
        "status": "ok"
    },
    "origin": "cache",
    "status": "active",
    "type": "Subscription"
}


08. GET the registration
========================
HTTP/1.1 200 OK
Content-Length: 243
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "endpoint": "http://my.csource.org:1026",
    "id": "urn:ngsi-ld:ContextSourceRegistration:REGEX(.*)",
    "information": [
        {
            "entities": [
                {
                    "type": "Vehicle"
                }
            ]
        }
    ],
    "origin": "cache",
    "status": "active",
    "type": "ContextSourceRegistration"
}


09. GET the entity
==================
HTTP/1.1 200 OK
Content-Length: 26
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "id": "urn:E1",
    "type": "T"
}


10. grep logfile for error - see nothing
========================================


--TEARDOWN--
brokerStop CB
dbDrop CB
