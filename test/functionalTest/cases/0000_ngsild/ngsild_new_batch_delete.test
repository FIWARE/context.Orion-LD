# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Batch Delete Test

--SHELL-INIT--
# Copied from ngsild_batch_delete.test
dbInit CB
orionldStart CB -experimental

--SHELL--

#
# 01. POST /ngsi-ld/v1/entityOperations/delete, with a JSON object as payload - see error
# 02. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings and a boolean as payload - see error
# 03. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings of  which the first is a URN and the seconds is not a valid URI - see error
# 04. Create 4 entities: E1, E2, E3, and E4
# 05. Get all entities - see E1-E4
# 06. Remove entities E1-E3 using POST /ngsi-ld/v1/entityOperations/delete
# 07. Get all entities - see E4
# 08. Remove entities E10 and E11 that do not exist in database. - see error
# 09. Remove entities E4 (exists in database) and E5 (does not exist in database)
# 10. Create entities E1 and E2
# 11. Attempt to batch delete E1 twice (E1 present twice in the entity id array of the payload body)
#

echo "01. POST /ngsi-ld/v1/entityOperations/delete, with a JSON object as payload - see error"
echo "======================================================================================="
payload='{
  "id1": "id2"
}'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload"
echo
echo


echo "02. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings and a boolean as payload - see error"
echo "================================================================================================================="
payload='[
  "urn:ngsi-ld:entity:E1",
  "urn:ngsi-ld:entity:E2",
  true
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload"
echo
echo


echo "03. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings of  which the first is a URN and the seconds is not a valid URI - see error"
echo "========================================================================================================================================================"
payload='[
  "urn:ngsi-ld:entity:E1",
  "mal"
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload"
echo
echo


echo "04. Create 4 entities: E1, E2, E3, and E4"
echo "========================================="
payload='{
  "id": "urn:ngsi-ld:entity:E1",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 1
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"

payload='{
  "id": "urn:ngsi-ld:entity:E2",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 2
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"

payload='{
  "id": "urn:ngsi-ld:entity:E3",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 3
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"

payload='{
  "id": "urn:ngsi-ld:entity:E4",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 4
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "05. Get all entities - see E1-E4"
echo "================================"
orionCurl --url "/ngsi-ld/v1/entities?options=keyValues&type=T"
echo
echo


echo "06. Remove entities E1-E3 using POST /ngsi-ld/v1/entityOperations/delete"
echo "========================================================================"
payload='[
  "urn:ngsi-ld:entity:E1",
  "urn:ngsi-ld:entity:E2",
  "urn:ngsi-ld:entity:E3"
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload" -H "Accept: application/ld+json" --linkHeaderFix
echo
echo


echo "07. Get all entities - see E4"
echo "================================"
orionCurl --url "/ngsi-ld/v1/entities?options=keyValues&type=T"
echo
echo


echo "08. Remove entities that do not exist in the database. - see error"
echo "=================================================================="
payload='[
  "urn:ngsi-ld:entity:E10",
  "urn:ngsi-ld:entity:E11"
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload" -H "Accept: application/ld+json" --linkHeaderFix
echo
echo


echo "09. Remove entities E4 (exists in database) and E5 (does not exist in database)"
echo "==============================================================================="
payload='[
  "urn:ngsi-ld:entity:E4",
  "urn:ngsi-ld:entity:E5"
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload" -H "Accept: application/ld+json" --linkHeaderFix
echo
echo


echo "10. Create entities E1 and E2"
echo "============================="
payload='{
  "id": "urn:ngsi-ld:entity:E1",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 1
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"

payload='{
  "id": "urn:ngsi-ld:entity:E2",
  "type": "T",
  "A": {
    "type": "Property",
    "value": 2
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "11. Attempt to batch delete E1 twice (E1 present twice in the entity id array of the payload body)"
echo "=================================================================================================="
payload='[
  "urn:ngsi-ld:entity:E1",
  "urn:ngsi-ld:entity:E1"
]'
orionCurl --url /ngsi-ld/v1/entityOperations/delete -X POST --payload "$payload"
echo
echo


--REGEXPECT--
01. POST /ngsi-ld/v1/entityOperations/delete, with a JSON object as payload - see error
=======================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 133
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "payload body must be a JSON Array",
    "title": "Not a JSON Array",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


02. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings and a boolean as payload - see error
=================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 133
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Entity::id must be a JSON String",
    "title": "Invalid JSON type",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


03. POST /ngsi-ld/v1/entityOperations/delete, with a JSON Array of 2 strings of  which the first is a URN and the seconds is not a valid URI - see error
========================================================================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 125
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Entity::id must be a valid URI",
    "title": "Invalid URI",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


04. Create 4 entities: E1, E2, E3, and E4
=========================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1

HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E2

HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E3

HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E4



05. Get all entities - see E1-E4
================================
HTTP/1.1 200 OK
Content-Length: 193
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "A": 1,
        "id": "urn:ngsi-ld:entity:E1",
        "type": "T"
    },
    {
        "A": 2,
        "id": "urn:ngsi-ld:entity:E2",
        "type": "T"
    },
    {
        "A": 3,
        "id": "urn:ngsi-ld:entity:E3",
        "type": "T"
    },
    {
        "A": 4,
        "id": "urn:ngsi-ld:entity:E4",
        "type": "T"
    }
]


06. Remove entities E1-E3 using POST /ngsi-ld/v1/entityOperations/delete
========================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



07. Get all entities - see E4
================================
HTTP/1.1 200 OK
Content-Length: 49
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

[
    {
        "A": 4,
        "id": "urn:ngsi-ld:entity:E4",
        "type": "T"
    }
]


08. Remove entities that do not exist in the database. - see error
==================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 429
Content-Type: application/json
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:entity:E10",
            "error": {
                "detail": "Cannot delete entities that do not exist",
                "status": 404,
                "title": "Entity Not Found",
                "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound"
            }
        },
        {
            "entityId": "urn:ngsi-ld:entity:E11",
            "error": {
                "detail": "Cannot delete entities that do not exist",
                "status": 404,
                "title": "Entity Not Found",
                "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound"
            }
        }
    ],
    "success": []
}


09. Remove entities E4 (exists in database) and E5 (does not exist in database)
===============================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 249
Content-Type: application/json
Date: REGEX(.*)

{
    "errors": [
        {
            "entityId": "urn:ngsi-ld:entity:E5",
            "error": {
                "detail": "Cannot delete entities that do not exist",
                "status": 404,
                "title": "Entity Not Found",
                "type": "https://uri.etsi.org/ngsi-ld/errors/ResourceNotFound"
            }
        }
    ],
    "success": [
        "urn:ngsi-ld:entity:E4"
    ]
}


10. Create entities E1 and E2
=============================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1

HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E2



11. Attempt to batch delete E1 twice (E1 present twice in the entity id array of the payload body)
==================================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



--TEARDOWN--
brokerStop CB
dbDrop CB
