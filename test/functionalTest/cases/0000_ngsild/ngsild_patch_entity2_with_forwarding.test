# Copyright 2023 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Distributed PATCH of entity (real merge-patch)

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP2
dbInit CP3
orionldStart CB  -experimental -forwarding
orionldStart CP1 -experimental
orionldStart CP2 -experimental
orionldStart CP3 -experimental

--SHELL--
#
# 01. In CB, create an entity urn:E1 with an attribute P1
# 02. In CP1, create an entity urn:E1 with attributes P1+P2+R1 (P2: 0)
# 03. In CP2, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')
# 04. In CP3, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')
# 05. Create an exclusive registration R1 on urn:E1/P2
# 06. Create an exclusive registration R2 on urn:E1/R1
# 07. Create an inclusive registration R3 on T/P3
# 08. Patch urn:E1, setting P1=2, P2="P2", R1=urn:E2 (P2 goes to R1::endpoint, R1 goes to R2::endpoint)
# 09. GET urn:E1, with local=true - see only P1
# 10. GET urn:E1 - see P1, P2, R1
# 11. GET urn:E1 from CP1
# 12. GET urn:E1 from CP2
# 13. GET urn:E1 from CP3
#
# 14. DELETE urn:E1 in CP1
# 15. PATCH urn:E1/P2 - see 404 from R1
# 16. PATCH urn:E1/P1+P2 - see 207, including 404 from R1 and P1 as local success
#

echo "01. In CB, create an entity urn:E1 with an attribute P1"
echo "======================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 1
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. In CP1, create an entity urn:E1 with attributes P1+P2+R1 (P2: 0)"
echo "===================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 5,
  "P2": 0,
  "R1": { "object": "urn:cp1" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "03. In CP2, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')"
echo "=========================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 6,
  "P2": 6,
  "R1": { "object": "urn:cp2" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP2_PORT
echo
echo


echo "04. In CP3, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')"
echo "=========================================================================="
payload='{
  "id": "urn:E1",
  "type": "T",
  "P1": 4,
  "P2": 4,
  "R1": { "object": "urn:4" }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload" --port $CP3_PORT
echo
echo


echo "05. Create an exclusive registration R1 on urn:E1/P2"
echo "===================================================="
payload='{
  "id": "urn:ngsi-ld:registration:R1",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "propertyNames": [ "P2" ]
    }
  ],
  "mode": "exclusive",
  "operations": [ "mergeEntity", "retrieveEntity" ],
  "endpoint": "http://localhost:'$CP1_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "06. Create an exclusive registration R2 on urn:E1/R1"
echo "===================================================="
payload='{
  "id": "urn:ngsi-ld:registration:R2",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "id": "urn:E1",
          "type": "T"
        }
      ],
      "relationshipNames": [ "R1" ]
    }
  ],
  "mode": "exclusive",
  "operations": [ "mergeEntity", "retrieveEntity" ],
  "endpoint": "http://localhost:'$CP2_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "07. Create an inclusive registration R3 on T/P3"
echo "==============================================="
payload='{
  "id": "urn:ngsi-ld:registration:R3",
  "type": "ContextSourceRegistration",
  "information": [
    {
      "entities": [
        {
          "type": "T"
        }
      ],
      "propertyNames": [ "P3" ]
    }
  ],
  "mode": "inclusive",
  "operations": [ "mergeEntity", "retrieveEntity" ],
  "endpoint": "http://localhost:'$CP3_PORT'"
}'
orionCurl --url /ngsi-ld/v1/csourceRegistrations --payload "$payload"
echo
echo


echo "08. Patch urn:E1, setting P1=2, P2="P2", R1=urn:E2 (P2 goes to R1::endpoint, R1 goes to R2::endpoint)"
echo "====================================================================================================="
payload='{
  "P1": 8,
  "P2": "P2 (patched in step 8)",
  "P3": "P3 (patched in step 8)",
  "R1": { "object": "urn:patched:step08:E2" }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --payload "$payload" -X PATCH
echo
echo


echo "09. GET urn:E1, with local=true - see only P1"
echo "============================================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1?local=true
echo
echo


echo "10. GET urn:E1 - see P1, P2, R1"
echo "==============================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1
echo
echo


echo "11. GET urn:E1 from CP1"
echo "======================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --port $CP1_PORT
echo
echo


echo "12. GET urn:E1 from CP2"
echo "======================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --port $CP2_PORT
echo
echo


echo "13. GET urn:E1 from CP3"
echo "======================="
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --port $CP3_PORT
echo
echo


echo "14. DELETE urn:E1 in CP1"
echo "========================"
orionCurl --url /ngsi-ld/v1/entities/urn:E1 -X DELETE --port $CP1_PORT
echo
echo


echo "15. PATCH urn:E1/P2 - see 404 from R1"
echo "====================================="
payload='{
  "P2": "P2 (patch-attempt in step 15)"
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --payload "$payload" -X PATCH
echo
echo


echo "16. PATCH urn:E1/P1+P2 - see 207, including 404 from R1 and P1 as local success"
echo "==============================================================================="
payload='{
  "P1": "P1 (patch in step 16)",
  "P2": "P2 (patch-attempt in step 16)"
}'
orionCurl --url /ngsi-ld/v1/entities/urn:E1 --payload "$payload" -X PATCH
echo
echo


--REGEXPECT--
01. In CB, create an entity urn:E1 with an attribute P1
=======================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



02. In CP1, create an entity urn:E1 with attributes P1+P2+R1 (P2: 0)
====================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



03. In CP2, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')
==========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



04. In CP3, Create an entity urn:E1 with attributes P1+P2+R1 (R1: 'urn:0')
==========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:E1



05. Create an exclusive registration R1 on urn:E1/P2
====================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:registration:R1



06. Create an exclusive registration R2 on urn:E1/R1
====================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:registration:R2



07. Create an inclusive registration R3 on T/P3
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/csourceRegistrations/urn:ngsi-ld:registration:R3



08. Patch urn:E1, setting P1=2, P2=P2, R1=urn:E2 (P2 goes to R1::endpoint, R1 goes to R2::endpoint)
=====================================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



09. GET urn:E1, with local=true - see only P1
=============================================
HTTP/1.1 200 OK
Content-Length: 119
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 8
    },
    "P3": {
        "type": "Property",
        "value": "P3 (patched in step 8)"
    },
    "id": "urn:E1",
    "type": "T"
}


10. GET urn:E1 - see P1, P2, R1
===============================
HTTP/1.1 200 OK
Content-Length: 239
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 8
    },
    "P2": {
        "type": "Property",
        "value": "P2 (patched in step 8)"
    },
    "P3": {
        "type": "Property",
        "value": "P3 (patched in step 8)"
    },
    "R1": {
        "object": "urn:patched:step08:E2",
        "type": "Relationship"
    },
    "id": "urn:E1",
    "type": "T"
}


11. GET urn:E1 from CP1
=======================
HTTP/1.1 200 OK
Content-Length: 167
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 5
    },
    "P2": {
        "type": "Property",
        "value": "P2 (patched in step 8)"
    },
    "R1": {
        "object": "urn:cp1",
        "type": "Relationship"
    },
    "id": "urn:E1",
    "type": "T"
}


12. GET urn:E1 from CP2
=======================
HTTP/1.1 200 OK
Content-Length: 158
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 6
    },
    "P2": {
        "type": "Property",
        "value": 6
    },
    "R1": {
        "object": "urn:patched:step08:E2",
        "type": "Relationship"
    },
    "id": "urn:E1",
    "type": "T"
}


13. GET urn:E1 from CP3
=======================
HTTP/1.1 200 OK
Content-Length: 200
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "P1": {
        "type": "Property",
        "value": 4
    },
    "P2": {
        "type": "Property",
        "value": 4
    },
    "P3": {
        "type": "Property",
        "value": "P3 (patched in step 8)"
    },
    "R1": {
        "object": "urn:4",
        "type": "Relationship"
    },
    "id": "urn:E1",
    "type": "T"
}


14. DELETE urn:E1 in CP1
========================
HTTP/1.1 204 No Content
Date: REGEX(.*)



15. PATCH urn:E1/P2 - see 404 from R1
=====================================
HTTP/1.1 404 Not Found
Content-Length: 118
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "attributes": [
        "P2"
    ],
    "detail": "urn:E1",
    "registrationId": "urn:ngsi-ld:registration:R1",
    "title": "Entity does not exist"
}


16. PATCH urn:E1/P1+P2 - see 207, including 404 from R1 and P1 as local success
===============================================================================
HTTP/1.1 207 Multi-Status
Content-Length: 169
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

{
    "notUpdated": [
        {
            "attributes": [
                "P2"
            ],
            "detail": "urn:E1",
            "registrationId": "urn:ngsi-ld:registration:R1",
            "statusCode": 404,
            "title": "Entity does not exist"
        }
    ],
    "updated": [
        "P1"
    ]
}


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
brokerStop CP3
dbDrop CB
dbDrop CP1
dbDrop CP2
dbDrop CP3
