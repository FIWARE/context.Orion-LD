# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
First notification without mongoBackend

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0-255
accumulatorStart --pretty-print 127.0.0.1 ${LISTENER_PORT}

--SHELL--

#
# 01. Create an Entity urn:test:entity:E1, with attribute A1 and A2
# 02. Create an ngsi-ld subscription for urn:test:entity:E1 and attributes A1+A3
# 03. Dump the accumulator to see the first notification, then reset the accumulator
# 04. See the subscription in mongo
# 05. Update urn:test:entity:E1/A1 using POST /entities/urn:test:entity:E1/attrs, without 'options=noOverwrite', i.e. no mongoBackend involved
# 06. Dump accumulator
#

echo "01. Create an Entity urn:test:entity:E1, with attribute A1 and A2"
echo "================================================================="
payload='{
  "id": "urn:test:entity:E1",
  "type": "T",
  "A1": {
    "type": "Property",
    "value": 1
  },
  "A2": {
    "type": "Property",
    "value": "ok"
  }
}'
orionCurl --url /ngsi-ld/v1/entities -X POST --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "02. Create an ngsi-ld subscription for urn:test:entity:E1 and attributes A1+A3"
echo "=============================================================================="
payload='{
  "id": "http://a.b.c/subs/sub01",
  "type": "Subscription",
  "name": "Sub 01",
  "description": "receiving notifications for ALL attributes of urn:ngsi-ld:E01",
  "entities": [
    {
      "id": "urn:test:entity:E1",
      "type": "T"
    }
  ],
  "watchedAttributes": ["A1", "A3"],
  "notification": {
    "attributes": [],
    "format": "normalized",
    "endpoint": {
      "uri": "http://127.0.0.1:'${LISTENER_PORT}'/notify",
      "accept": "application/ld+json"
    }
  },
  "expires": "2028-12-31T10:00:00",
  "throttling": 0
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/json"
echo
echo


echo "03. Dump the accumulator to see the first notification, then reset the accumulator"
echo "=================================================================================="
accumulatorDump
accumulatorReset
echo
echo


echo "04. See the subscription in mongo"
echo "================================="
mongoCmd2 ftest "db.csubs.findOne()"
echo
echo


echo "05. Update urn:test:entity:E1/A1 using POST /entities/urn:test:entity:E1/attrs, without 'options=noOverwrite', i.e. no mongoBackend involved"
echo "============================================================================================================================================"
payload={'
  "A1": {
    "type": "Property",
    "value": 22
  }
}'
orionCurl --url /ngsi-ld/v1/entities/urn:test:entity:E1/attrs --payload "$payload"
echo
echo


echo "06. Dump accumulator"
echo "===================="
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create an Entity urn:test:entity:E1, with attribute A1 and A2
=================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:test:entity:E1
Date: REGEX(.*)



02. Create an ngsi-ld subscription for urn:test:entity:E1 and attributes A1+A3
==============================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/subscriptions/http://a.b.c/subs/sub01
Date: REGEX(.*)



03. Dump the accumulator to see the first notification, then reset the accumulator
==================================================================================
POST http://REGEX(.*)/notify
Fiware-Servicepath: /
Content-Length: 315
User-Agent: orion/REGEX(.*)
Ngsiv2-Attrsformat: normalized
Host: REGEX(.*)
Accept: application/json
Content-Type: application/ld+json

{
    "@context": "https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld", 
    "data": [
        {
            "A1": {
                "type": "Property", 
                "value": 1
            }, 
            "id": "urn:test:entity:E1", 
            "type": "T"
        }
    ], 
    "id": "urn:ngsi-ld:Notification:5d8542e7ca270c5f3188d935", 
    "notifiedAt": "2019-09-20T21:21:43Z", 
    "subscriptionId": "http://a.b.c/subs/sub01", 
    "type": "Notification"
}
=======================================


04. See the subscription in mongo
=================================


05. Update urn:test:entity:E1/A1 using POST /entities/urn:test:entity:E1/attrs, without 'options=noOverwrite', i.e. no mongoBackend involved
============================================================================================================================================
HTTP/1.1 204 No Content
Content-Length: 0
Date: REGEX(.*)



06. Dump accumulator
====================
orionLogView | egrep "Servicing|NFY:"


--TEARDOWN--
brokerStop CB
accumulatorStop
dbDrop CB
