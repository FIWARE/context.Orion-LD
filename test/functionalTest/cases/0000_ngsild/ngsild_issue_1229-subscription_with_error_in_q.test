# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Subscription with erroneous q - error handling

--SHELL-INIT--
export BROKER=orionld
dbInit CB
brokerStart CB 0 IPv4 -experimental

--SHELL--

#
# 01. Attempt to create a subscription with an erroneous q as in issue 1229 - make sure the broker doesn't crash
# 02. GET all subscriptions - see [] as the one from step 01 was incorrect
#


echo "01. Attempt to create a subscription with an erroneous q as in issue 1229 - make sure the broker doesn't crash"
echo "=============================================================================================================="
payload='{
  "id": "uri:skeutuveu1",
  "description": "Light1 sub is on",
  "type": "Subscription",
  "entities": [
    {
      "type": "Device"
    }
  ],
  "watchedAttributes": [
    "isOn"
  ],
  "q": "brandName==Mercedes",
  "notification": {
    "attributes": [
      "isOn",
      "dataProvider",
      "day"
    ],
    "format": "keyValues",
    "endpoint": {
      "uri": "http://172.31.0.1:4107/notifications/apopo",
      "accept": "application/json"
    }
  },
  "@context": [
    "https://smartdatamodels.org/context.jsonld"
  ]
}'
orionCurl --url /ngsi-ld/v1/subscriptions --payload "$payload" -H "Content-Type: application/ld+json"
echo
echo


echo "02. GET all subscriptions - see [] as the one from step 01 was incorrect"
echo "========================================================================"
orionCurl --url /ngsi-ld/v1/subscriptions
echo
echo


--REGEXPECT--
01. Attempt to create a subscription with an erroneous q as in issue 1229 - make sure the broker doesn't crash
==============================================================================================================
HTTP/1.1 400 Bad Request
Content-Length: 108
Content-Type: application/json
Date: REGEX(.*)

{
    "detail": "Variable",
    "title": "Invalid Q-Filter",
    "type": "https://uri.etsi.org/ngsi-ld/errors/BadRequestData"
}


02. GET all subscriptions - see [] as the one from step 01 was incorrect
========================================================================
HTTP/1.1 200 OK
Content-Length: 2
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"

[]


--TEARDOWN--
brokerStop CB
dbDrop CB
