# Copyright 2022 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
PATCH the observedAt of an attribute 

--SHELL-INIT--
dbInit CB
orionldStart CB -experimental

--SHELL--
#
# 01. Create an entity E1 with property P1 having an observedAt
# 02. PATCH the Property P1, modifying its observedAt
# 03. GET E1 and see the new observedAt
# 04. See the entity in mongo
#

echo "01. Create an entity E1 with property P1 having an observedAt"
echo "============================================================="
payload='{
  "id": "urn:ngsi-ld:entity:E1",
  "type": "T",
  "P1": {
    "type": "Property",
    "value": 1,
    "observedAt": "2022-09-04T15:26:00.123Z"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. PATCH the Property P1, modifying its observedAt"
echo "==================================================="
payload='{
  "value": 2,
  "observedAt": "2022-09-04T15:26:01.456Z"
}'
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1/attrs/P1 --payload "$payload" -X PATCH
echo
echo


echo "03. GET E1 and see the new observedAt"
echo "====================================="
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1
echo
echo


echo "04. See the entity in mongo"
echo "==========================="
mongoCmd2 ftest "db.entities.findOne()"
echo
echo


--REGEXPECT--
01. Create an entity E1 with property P1 having an observedAt
=============================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entity:E1



02. PATCH the Property P1, modifying its observedAt
===================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



03. GET E1 and see the new observedAt
=====================================
HTTP/1.1 200 OK
Content-Length: 116
Content-Type: application/json
Date: REGEX(.*)
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-contextREGEX(.*)

{
    "P1": {
        "observedAt": "2022-09-04T15:26:01.456Z",
        "type": "Property",
        "value": 2
    },
    "id": "urn:ngsi-ld:entity:E1",
    "type": "T"
}


04. See the entity in mongo
===========================
MongoDB shell version REGEX(.*)
connecting to: REGEX(.*)
MongoDB server version: REGEX(.*)
{
	"_id" : {
		"id" : "urn:ngsi-ld:entity:E1",
		"type" : "https://uri.etsi.org/ngsi-ld/default-context/T",
		"servicePath" : "/"
	},
	"attrNames" : [
		"https://uri.etsi.org/ngsi-ld/default-context/P1"
	],
	"attrs" : {
		"https://uri=etsi=org/ngsi-ld/default-context/P1" : {
			"type" : "Property",
			"creDate" : REGEX(.*),
			"modDate" : REGEX(.*),
			"value" : 2,
			"mdNames" : [
				"observedAt"
			],
			"md" : {
				"observedAt" : {
					"value" : 1662305161.456
				}
			}
		}
	},
	"creDate" : REGEX(.*),
	"modDate" : REGEX(.*),
	"lastCorrelator" : ""
}
bye


--TEARDOWN--
brokerStop CB
dbDrop CB
