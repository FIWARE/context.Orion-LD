# Copyright 2021 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Geo::MultiLineString

--SHELL-INIT--
export BROKER=orionld
dbInit CB
pgInit $CB_DB_NAME
brokerStart CB 100 IPv4 -troe

--SHELL--

#
# 01. Create an entity E1 with a location attribute that is a MultiLineString
# 02. See E1 in the temporal database
# 03. See the attributes in the temporal database
# 04. See the sub-attributes in the temporal database
# 05. GET the entity
# 06. GET the attribute from TRoE
# 07. GET the attribute from TRoE using postgis
# 08. GET nothing from TRoE using postgis
#

echo "01. Create an entity E1 with a location attribute that is a MultiLineString"
echo "==========================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "location": {
    "type": "GeoProperty",
    "value": {
      "type": "MultiLineString",
      "coordinates": [ [ [ 0, 0 ], [ 1, 1 ], [4, 4] ], [ [ 1, 1 ], [ 2, 2 ], [5, 5] ] ]
    }
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. See E1 in the temporal database"
echo "==================================="
postgresCmd -sql "SELECT opMode,id,type FROM entities"
echo
echo


echo "03. See the attributes in the temporal database"
echo "==============================================="
postgresCmd -sql "SELECT opMode,id,valueType,entityId,subProperties,unitcode,datasetid,ST_AsText(geoMultiLineString),observedAt FROM attributes"
echo
echo


echo "04. See the sub-attributes in the temporal database"
echo "==================================================="
postgresCmd -sql "SELECT id,valueType,entityId,attrInstanceId,unitcode,text,number,boolean,observedAt FROM subAttributes"
echo
echo


echo "05. GET the entity"
echo "=================="
orionCurl --url /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
echo
echo


echo "06. GET the attribute from TRoE"
echo "==============================="
postgresCmd -sql "SELECT id,valueType,entityId,id,unitcode,ST_AsText(geoMultiLineString),observedAt FROM attributes"
echo
echo


echo "07. GET the attribute from TRoE using postgis"
echo "============================================="
postgresCmd -sql "SELECT valueType,entityId,id,unitcode,ST_AsText(geoMultiLineString),observedAt FROM attributes WHERE ST_DWithin(geoMultiLineString, 'SRID=4326;POINT(2 2)'::geography, 1000)"
echo
echo


echo "08. GET nothing from TRoE using postgis"
echo "======================================="
postgresCmd -sql "SELECT valueType,entityId,id,unitcode,ST_AsText(geoMultiLineString),observedAt FROM attributes WHERE ST_DWithin(geoMultiLineString, 'SRID=4326;POINT(-2 -2)'::geography, 1)"
echo
echo


--REGEXPECT--
01. Create an entity E1 with a location attribute that is a MultiLineString
===========================================================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



02. See E1 in the temporal database
===================================
opmode,id,type
Create,urn:ngsi-ld:entities:E1,https://uri.etsi.org/ngsi-ld/default-context/T


03. See the attributes in the temporal database
===============================================
opmode,id,valuetype,entityid,subproperties,unitcode,datasetid,st_astext,observedat
Create,location,GeoMultiLineString,urn:ngsi-ld:entities:E1,f,,None,"MULTILINESTRING Z ((0 0 0,1 1 0,4 4 0),(1 1 0,2 2 0,5 5 0))",


04. See the sub-attributes in the temporal database
===================================================
id,valuetype,entityid,attrinstanceid,unitcode,text,number,boolean,observedat


05. GET the entity
==================
HTTP/1.1 200 OK
Content-Length: 168
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

{
    "id": "urn:ngsi-ld:entities:E1",
    "location": {
        "type": "GeoProperty",
        "value": {
            "coordinates": [
                [
                    [
                        0,
                        0
                    ],
                    [
                        1,
                        1
                    ],
                    [
                        4,
                        4
                    ]
                ],
                [
                    [
                        1,
                        1
                    ],
                    [
                        2,
                        2
                    ],
                    [
                        5,
                        5
                    ]
                ]
            ],
            "type": "MultiLineString"
        }
    },
    "type": "T"
}


06. GET the attribute from TRoE
===============================
id,valuetype,entityid,id,unitcode,st_astext,observedat
location,GeoMultiLineString,urn:ngsi-ld:entities:E1,location,,"MULTILINESTRING Z ((0 0 0,1 1 0,4 4 0),(1 1 0,2 2 0,5 5 0))",


07. GET the attribute from TRoE using postgis
=============================================
valuetype,entityid,id,unitcode,st_astext,observedat
GeoMultiLineString,urn:ngsi-ld:entities:E1,location,,"MULTILINESTRING Z ((0 0 0,1 1 0,4 4 0),(1 1 0,2 2 0,5 5 0))",


08. GET nothing from TRoE using postgis
=======================================
valuetype,entityid,id,unitcode,st_astext,observedat


--TEARDOWN--
brokerStop CB
dbDrop CB
