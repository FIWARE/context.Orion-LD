# Copyright 2024 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Simple test of creation of an Entity with ALL types of attributes

--SHELL-INIT--
export BROKER=orionld
dbInit CB
pgInit $CB_DB_NAME
brokerStart CB 0 IPv4 -troe -experimental

--SHELL--

#
# 01. Create an entity E1 with ALL types of attributes
# 02. See E1 in the temporal database
# 03. See the attributes in the temporal database
#

echo "01. Create an entity E1 with ALL types of attributes - only property, geop, and relationship are saved in troe"
echo "=============================================================================================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T",
  "property":     12,
  "geop":         { "type": "Point", "coordinates": [ 1, 2 ] },
  "relationship": { "object": "urn:E1" },
  "lang":         { "languageMap": { "es": "bien", "se": "bra" } },
  "voc":          { "vocab": "abc" },
  "json1":        { "json": [ "abc" ] },
  "json2":        { "json": 134 },
  "json3":        { "json": { "a1": "abc" } }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. See E1 in the temporal database"
echo "==================================="
postgresCmd -sql "SELECT opMode,id,type,ts FROM entities"
echo
echo


echo "03. See the attributes in the temporal database"
echo "==============================================="
postgresCmd -sql "SELECT opMode,id,valueType,entityId,subProperties,unitcode,datasetid,text,number,boolean,observedAt,ts FROM attributes"
echo
echo


--REGEXPECT--
01. Create an entity E1 with ALL types of attributes - only property, geop, and relationship are saved in troe
==============================================================================================================
HTTP/1.1 201 Created
Content-Length: 0
Date: REGEX(.*)
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1



02. See E1 in the temporal database
===================================
opmode,id,type,ts
Create,urn:ngsi-ld:entities:E1,https://uri.etsi.org/ngsi-ld/default-context/T,REGEX(202.*)


03. See the attributes in the temporal database
===============================================
opmode,id,valuetype,entityid,subproperties,unitcode,datasetid,text,number,boolean,observedat,ts
Create,https://uri.etsi.org/ngsi-ld/default-context/property,Number,urn:ngsi-ld:entities:E1,f,,None,,12,,,202REGEX(.*)
Create,https://uri.etsi.org/ngsi-ld/default-context/geop,GeoPoint,urn:ngsi-ld:entities:E1,f,,None,,,,,202REGEX(.*)
Create,https://uri.etsi.org/ngsi-ld/default-context/relationship,Relationship,urn:ngsi-ld:entities:E1,f,,None,urn:E1,,,,202REGEX(.*)
Create,https://uri.etsi.org/ngsi-ld/default-context/json2,Number,urn:ngsi-ld:entities:E1,f,,None,,134,,,202REGEX(.*)


--TEARDOWN--
brokerStop CB
dbDrop CB
