# Copyright 2020 FIWARE Foundation e.V.
#
# This file is part of Orion-LD Context Broker.
#
# Orion-LD Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion-LD Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion-LD Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# orionld at fiware dot org

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Entity Batch Update with options=noOverwrite for TRoE - one property is ignored

--SHELL-INIT--
export BROKER=orionld
dbInit CB
pgInit $CB_DB_NAME
brokerStart CB 100 IPv4 -troe

--SHELL--

#
# 01. Create an entity E1/T1 with one property P1
# 02. BATCH Update/noOverwrite of E1/P1+P2 => P1 is ignored while P2 is added to E1
# 03. GET E1 to see old P1 and new P2
# 04. See TRoE entities - see one single row for E1
# 05. See TRoE attributes - see two rows, one for P1 and one for P2
# 06. See TRoE sub-attributes - there aren't any
#

echo "01. Create an entity E1/T1 with one property P1"
echo "==============================================="
payload='{
  "id": "urn:ngsi-ld:entities:E1",
  "type": "T1",
  "P1": {
    "type": "Property",
    "value": "Step_01"
  }
}'
orionCurl --url /ngsi-ld/v1/entities --payload "$payload"
echo
echo


echo "02. BATCH Update/noOverwrite of E1/P1+P2 => P1 is ignored while P2 is added to E1"
echo "================================================================================="
payload='[
  {
    "id": "urn:ngsi-ld:entities:E1",
    "type": "T1",
    "P1": {
      "type": "Property",
      "value": "Step_02"
    },
    "P2": {
      "type": "Property",
      "value": "Step_02"
    }
  }
]'
orionCurl --url /ngsi-ld/v1/entityOperations/update?options=noOverwrite --payload "$payload"
echo
echo


echo "03. GET E1 to see P1 and P2"
echo "==========================="
orionCurl --url /ngsi-ld/v1/entities?type=T1
echo
echo


echo "04. See TRoE entities - see one single row for E1"
echo "================================================="
postgresCmd -sql "SELECT opMode,id,type,ts FROM entities"
echo
echo


echo "05. See TRoE attributes - see two rows, one for P1 and one for P2"
echo "================================================================="
postgresCmd -sql "SELECT opMode,id,valueType,entityId,subProperties,unitcode,datasetid,text,number,boolean,ts FROM attributes"
echo
echo


echo "06. See TRoE sub-attributes - there aren't any"
echo "=============================================="
postgresCmd -sql "SELECT id,valueType,entityId,attrInstanceId,unitcode,text,number,boolean,ts FROM subAttributes"
echo
echo


--REGEXPECT--
01. Create an entity E1/T1 with one property P1
===============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /ngsi-ld/v1/entities/urn:ngsi-ld:entities:E1
Date: REGEX(.*)



02. BATCH Update/noOverwrite of E1/P1+P2 => P1 is ignored while P2 is added to E1
=================================================================================
HTTP/1.1 204 No Content
Date: REGEX(.*)



03. GET E1 to see P1 and P2
===========================
HTTP/1.1 200 OK
Content-Length: 132
Content-Type: application/json
Link: <https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld>; rel="http://www.w3.org/ns/json-ld#context"; type="application/ld+json"
Date: REGEX(.*)

[
    {
        "P1": {
            "type": "Property",
            "value": "Step_01"
        },
        "P2": {
            "type": "Property",
            "value": "Step_02"
        },
        "id": "urn:ngsi-ld:entities:E1",
        "type": "T1"
    }
]


04. See TRoE entities - see one single row for E1
=================================================
opmode,id,type,ts
Create,urn:ngsi-ld:entities:E1,https://uri.etsi.org/ngsi-ld/default-context/T1,REGEX(202.*)


05. See TRoE attributes - see two rows, one for P1 and one for P2
=================================================================
opmode,id,valuetype,entityid,subproperties,unitcode,datasetid,text,number,boolean,ts
Create,https://uri.etsi.org/ngsi-ld/default-context/P1,String,urn:ngsi-ld:entities:E1,f,,None,Step_01,,,REGEX(202.*)
Append,https://uri.etsi.org/ngsi-ld/default-context/P2,String,urn:ngsi-ld:entities:E1,f,,None,Step_02,,,REGEX(202.*)


06. See TRoE sub-attributes - there aren't any
==============================================
id,valuetype,entityid,attrinstanceid,unitcode,text,number,boolean,ts


--TEARDOWN--
brokerStop CB
dbDrop CB
pgDrop $CB_DB_NAME
